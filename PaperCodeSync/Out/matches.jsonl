{"symbol_id": "4cdb452f3b12d10108af8abf0564bcf3e3a3a978", "symbol_name": "remove_comments_and_docstrings", "query_text_overlap": "tokenize token token_type output_tokens prev_toktype source token_string indent io_obj new_source remove_comments_and_docstrings startswith string append bytesio comment decode encode newline readline", "query_text_semantic": "def remove_comments_and_docstrings(source): io_obj = io.BytesIO(source.encode('utf-8')) output_tokens = [] prev_toktype = tokenize.INDENT try: for token in tokenize.tokenize(io_obj.readline): token_type = token.type token_string = token.string if token_type == tokenize.COMMENT: continue if token_type == tokenize.STRING and prev_toktype in (tokenize.INDENT, tokenize.NEWLINE): if token_string.startswith('\"\"\"') or token_string.startswith(\"'''\"): continue output_tokens.append(token) prev_toktype = token_type except tokenize.TokenError: return source new_source = tokenize.untokenize(output_tokens).decode('utf-8') return new_source", "best": {"chunk_id": "p_0e6b7c54fd12", "score": 0.7999348411306386, "overlap_score": 0.7175626552365223, "semantic_score": 0.923493119971813}, "alternatives": [{"chunk_id": "p_066d4d3d4711", "score": 0.7716838797808216, "overlap_score": 0.619473132968036, "semantic_score": 1.0}, {"chunk_id": "p_34ad3b3af1d4", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_0e6b7c54fd12", "combined": 0.7999348411306386, "overlap": 0.7175626552365223, "semantic": 0.923493119971813}, {"chunk_id": "p_066d4d3d4711", "combined": 0.7716838797808216, "overlap": 0.619473132968036, "semantic": 1.0}, {"chunk_id": "p_34ad3b3af1d4", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_b852ce2579bc", "combined": 0.5766679494804603, "overlap": 0.9611132491341005, "semantic": 0.0}, {"chunk_id": "p_841f6201bb1f", "combined": 0.5442147460679294, "overlap": 0.9070245767798825, "semantic": 0.0}, {"chunk_id": "p_89b4f1f2ccff", "combined": 0.5255733497014674, "overlap": 0.8759555828357791, "semantic": 0.0}, {"chunk_id": "p_a3ba3397e685", "combined": 0.37604241714536535, "overlap": 0.0, "semantic": 0.9401060428634133}, {"chunk_id": "p_306b3028214e", "combined": 0.35962734617870296, "overlap": 0.0, "semantic": 0.8990683654467574}, {"chunk_id": "p_3564944ad171", "combined": 0.33640600789601843, "overlap": 0.0, "semantic": 0.841015019740046}, {"chunk_id": "p_8721154d2c1a", "combined": 0.31204739455881875, "overlap": 0.0, "semantic": 0.7801184863970468}]}
{"symbol_id": "d50b26d2ed31a10bc6c25f8aed51a7a10b2c6d8f", "symbol_name": "construct_prompt", "query_text_overlap": "content file file_contents_str construct_prompt files_content paper_content path prompt items please paper model design code file_path ncontent evaluate whether following correctly", "query_text_semantic": "def construct_prompt(paper_content, files_content): file_contents_str = \"\" for path, content in files_content.items(): file_contents_str += f\"file_path: {path}\\ncontent:\\n{content}\\n{'-'*60}\\n\" prompt = f\"\"\"Please evaluate whether the following file content correctly implements the requirements outlined in the paper. In particular, carefully assess the internal implementation concerning model design, loss function design, and model updating. If any issues are found in the file content, please return the corrected complete code for the corresponding file. The output must follow the format: filename + file content, and it should be enclosed within a Python code block. Paper content: {'='*80} {paper_content} {'='*80} File content: {'='*80} {file_contents_str} {'='*80} \"\"\" return prompt", "best": {"chunk_id": "p_f304dff67a42", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_03643421fd58", "score": 0.5373090257000369, "overlap_score": 0.8955150428333949, "semantic_score": 0.0}, {"chunk_id": "p_b43208b407f5", "score": 0.5295205848119356, "overlap_score": 0.8825343080198927, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_f304dff67a42", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_03643421fd58", "combined": 0.5373090257000369, "overlap": 0.8955150428333949, "semantic": 0.0}, {"chunk_id": "p_b43208b407f5", "combined": 0.5295205848119356, "overlap": 0.8825343080198927, "semantic": 0.0}, {"chunk_id": "p_779699e079a4", "combined": 0.44290797676804, "overlap": 0.7381799612800667, "semantic": 0.0}, {"chunk_id": "p_1134bdea6147", "combined": 0.4399357265859909, "overlap": 0.7332262109766515, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.43220825573100563, "overlap": 0.7203470928850094, "semantic": 0.0}, {"chunk_id": "p_b9d639e3426c", "combined": 0.4203548000787133, "overlap": 0.7005913334645222, "semantic": 0.0}, {"chunk_id": "p_a3ba3397e685", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_3d0ba2d606ee", "combined": 0.39697205044905487, "overlap": 0.6616200840817581, "semantic": 0.0}, {"chunk_id": "p_e34fca001d79", "combined": 0.3632911895569386, "overlap": 0.6054853159282311, "semantic": 0.0}]}
{"symbol_id": "07ec93aac6a6452cac37f46813ca08cf83358e18", "symbol_name": "read_markdown_file", "query_text_overlap": "md_file_path read read_markdown_file encoding exception open print try utf except file error", "query_text_semantic": "def read_markdown_file(md_file_path): try: with open(md_file_path, 'r', encoding='utf-8') as f: return f.read() except Exception as e: print(f\"read file {md_file_path} error: {e}\") return \"\"", "best": {"chunk_id": "p_ba71050229e0", "score": 1.0, "overlap_score": 1.0, "semantic_score": 1.0}, "alternatives": [{"chunk_id": "p_306b3028214e", "score": 0.46113165863840166, "overlap_score": 0.4435619672930299, "semantic_score": 0.48748619565645934}, {"chunk_id": "p_1134bdea6147", "score": 0.3947751511793554, "overlap_score": 0.6579585852989257, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_ba71050229e0", "combined": 1.0, "overlap": 1.0, "semantic": 1.0}, {"chunk_id": "p_306b3028214e", "combined": 0.46113165863840166, "overlap": 0.4435619672930299, "semantic": 0.48748619565645934}, {"chunk_id": "p_1134bdea6147", "combined": 0.3947751511793554, "overlap": 0.6579585852989257, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.38784092581265384, "overlap": 0.6464015430210898, "semantic": 0.0}, {"chunk_id": "p_b24a257cad58", "combined": 0.3841436256108416, "overlap": 0.6402393760180694, "semantic": 0.0}, {"chunk_id": "p_32d0ee873290", "combined": 0.3347054826083289, "overlap": 0.0, "semantic": 0.8367637065208221}, {"chunk_id": "p_be5c0e6704db", "combined": 0.1901494069802392, "overlap": 0.0, "semantic": 0.4753735174505979}, {"chunk_id": "p_ed80d03c45ad", "combined": 0.17184520143001342, "overlap": 0.0, "semantic": 0.4296130035750335}, {"chunk_id": "p_86702f9909a0", "combined": 0.17135542226135603, "overlap": 0.0, "semantic": 0.42838855565339007}, {"chunk_id": "p_779699e079a4", "combined": 0.15833076924055234, "overlap": 0.0, "semantic": 0.3958269231013808}]}
{"symbol_id": "4f72c0dcb959ef707c313f65a9ff389d2d697270", "symbol_name": "read_files_from_dir", "query_text_overlap": "full_path file_contents filename content dirpath extensions filenames read read_files_from_dir root_dir encoding endswith exception join open path print walk json try", "query_text_semantic": "def read_files_from_dir(root_dir, extensions=(\".py\", \".json\")): file_contents = {} for dirpath, _, filenames in os.walk(root_dir): for filename in filenames: if filename.endswith(extensions): full_path = os.path.join(dirpath, filename) try: with open(full_path, 'r', encoding='utf-8') as f: content = f.read() file_contents[full_path] = content except Exception as e: print(f\"read file {full_path} error: {e}\") return file_contents", "best": {"chunk_id": "p_b24a257cad58", "score": 0.710239754797765, "overlap_score": 0.7419238039323032, "semantic_score": 0.6627136810959579}, "alternatives": [{"chunk_id": "p_be18a2d213ad", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, {"chunk_id": "p_26f46b1eb215", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_b24a257cad58", "combined": 0.710239754797765, "overlap": 0.7419238039323032, "semantic": 0.6627136810959579}, {"chunk_id": "p_be18a2d213ad", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_26f46b1eb215", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_7dc1750f2080", "combined": 0.39540659978172177, "overlap": 0.0, "semantic": 0.9885164994543044}, {"chunk_id": "p_be5c0e6704db", "combined": 0.3453546282108027, "overlap": 0.0, "semantic": 0.8633865705270067}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.3347731406004461, "overlap": 0.5579552343340769, "semantic": 0.0}, {"chunk_id": "p_306b3028214e", "combined": 0.32442847346082204, "overlap": 0.5407141224347034, "semantic": 0.0}, {"chunk_id": "p_6e6221d45c4a", "combined": 0.3123000436493012, "overlap": 0.5205000727488354, "semantic": 0.0}, {"chunk_id": "p_fe60477d56a8", "combined": 0.30018626820762795, "overlap": 0.0, "semantic": 0.7504656705190698}, {"chunk_id": "p_ed80d03c45ad", "combined": 0.2924827967069021, "overlap": 0.0, "semantic": 0.7312069917672551}]}
{"symbol_id": "9130e334260923e4b748046bf6040815038ff276", "symbol_name": "write_file", "query_text_overlap": "content file file_path write_file encoding open write utf", "query_text_semantic": "def write_file(file_path, content): with open(file_path, 'w', encoding='utf-8') as file: file.write(content)", "best": {"chunk_id": "p_1134bdea6147", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_1ddee3c55441", "score": 0.5894610002488968, "overlap_score": 0.982435000414828, "semantic_score": 0.0}, {"chunk_id": "p_b24a257cad58", "score": 0.5838416492982098, "overlap_score": 0.9730694154970163, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_1134bdea6147", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.5894610002488968, "overlap": 0.982435000414828, "semantic": 0.0}, {"chunk_id": "p_b24a257cad58", "combined": 0.5838416492982098, "overlap": 0.9730694154970163, "semantic": 0.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.4390713743400802, "overlap": 0.7317856239001337, "semantic": 0.0}, {"chunk_id": "p_86702f9909a0", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_13436cbd731c", "combined": 0.3651126900868741, "overlap": 0.0, "semantic": 0.9127817252171851}, {"chunk_id": "p_32d0ee873290", "combined": 0.34088551817835744, "overlap": 0.0, "semantic": 0.8522137954458935}, {"chunk_id": "p_be5c0e6704db", "combined": 0.3365609219870061, "overlap": 0.0, "semantic": 0.8414023049675152}, {"chunk_id": "p_f8cf778251a1", "combined": 0.31305112785413963, "overlap": 0.0, "semantic": 0.782627819635349}, {"chunk_id": "p_1ef32940dd6f", "combined": 0.30722498498080303, "overlap": 0.0, "semantic": 0.7680624624520075}]}
{"symbol_id": "bc49eb6f6a8d01e8331507933692364cf685360f", "symbol_name": "run_fix_script", "query_text_overlap": "subprocess process script_path stderr stdout code_str pipe run_fix_script communicate cwd popen returncode text write_file test function write fix code temporary", "query_text_semantic": "def run_fix_script(code_str, script_path=\"test.py\"): # Function to write fix code to a temporary file and run it via subprocess write_file(script_path, code_str) process = subprocess.Popen( [\"python\", script_path], cwd=\"iter_code/paper/code_generate\", stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True ) stdout, stderr = process.communicate() return stdout, stderr, process.returncode", "best": {"chunk_id": "p_ed80d03c45ad", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_6a42cd47402f", "score": 0.576760311182143, "overlap_score": 0.9612671853035717, "semantic_score": 0.0}, {"chunk_id": "p_3d0ba2d606ee", "score": 0.5245562856687075, "overlap_score": 0.8742604761145125, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_ed80d03c45ad", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_6a42cd47402f", "combined": 0.576760311182143, "overlap": 0.9612671853035717, "semantic": 0.0}, {"chunk_id": "p_3d0ba2d606ee", "combined": 0.5245562856687075, "overlap": 0.8742604761145125, "semantic": 0.0}, {"chunk_id": "p_7dc1750f2080", "combined": 0.436983098274448, "overlap": 0.7283051637907466, "semantic": 0.0}, {"chunk_id": "p_9e3c0287bfb0", "combined": 0.43061524785964483, "overlap": 0.7176920797660747, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.4199737600532969, "overlap": 0.6999562667554948, "semantic": 0.0}, {"chunk_id": "p_6e45a91dba7e", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_a6ef97164a04", "combined": 0.39080712343668245, "overlap": 0.0, "semantic": 0.9770178085917061}, {"chunk_id": "p_4ea8c34d23c1", "combined": 0.36228863026215896, "overlap": 0.0, "semantic": 0.9057215756553973}, {"chunk_id": "p_656c786ca087", "combined": 0.31069137850380457, "overlap": 0.0, "semantic": 0.7767284462595114}]}
{"symbol_id": "63a1a94cca1d54834fff64fd143bc93758578a8f", "symbol_name": "run_main_py", "query_text_overlap": "env process stderr stdout subprocess pipe run_main_py target_directory communicate copy cwd environ popen returncode text main function run specified directory", "query_text_semantic": "def run_main_py(target_directory): # Function to run main.py in the specified directory using CUDA device 2 env = os.environ.copy() env[\"CUDA_VISIBLE_DEVICES\"] = \"2\" process = subprocess.Popen( [\"python\", \"main.py\"], cwd=target_directory, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True, env=env ) stdout, stderr = process.communicate() return stdout, stderr, process.returncode", "best": {"chunk_id": "p_7dc1750f2080", "score": 0.6256448380692023, "overlap_score": 0.7283051637907466, "semantic_score": 0.47165434948688584}, "alternatives": [{"chunk_id": "p_ed80d03c45ad", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, {"chunk_id": "p_6a42cd47402f", "score": 0.576760311182143, "overlap_score": 0.9612671853035717, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_7dc1750f2080", "combined": 0.6256448380692023, "overlap": 0.7283051637907466, "semantic": 0.47165434948688584}, {"chunk_id": "p_ed80d03c45ad", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_6a42cd47402f", "combined": 0.576760311182143, "overlap": 0.9612671853035717, "semantic": 0.0}, {"chunk_id": "p_3d0ba2d606ee", "combined": 0.5245562856687075, "overlap": 0.8742604761145125, "semantic": 0.0}, {"chunk_id": "p_4ea8c34d23c1", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_7554a8bf000d", "combined": 0.3602138191426188, "overlap": 0.0, "semantic": 0.900534547856547}, {"chunk_id": "p_7557473886f3", "combined": 0.35803816548668405, "overlap": 0.5967302758111401, "semantic": 0.0}, {"chunk_id": "p_6e45a91dba7e", "combined": 0.3474829263826087, "overlap": 0.0, "semantic": 0.8687073159565216}, {"chunk_id": "p_d478fbfe6b3d", "combined": 0.30278958300358455, "overlap": 0.5046493050059743, "semantic": 0.0}, {"chunk_id": "p_a6ef97164a04", "combined": 0.22325045660749687, "overlap": 0.0, "semantic": 0.5581261415187422}]}
{"symbol_id": "3f7644170f81722651481caab77fe779850d3009", "symbol_name": "extract_python_code", "query_text_overlap": "match extract_python_code response python dotall group search strip code function extract between blocks else", "query_text_semantic": "def extract_python_code(response): # Function to extract Python code between ```python``` code blocks match = re.search(r'```python\\n(.*?)\\n```', response, re.DOTALL) if match: return match.group(1).strip() else: return None", "best": {"chunk_id": "p_0e6b7c54fd12", "score": 0.8981559953601477, "overlap_score": 1.0, "semantic_score": 0.7453899884003694}, "alternatives": [{"chunk_id": "p_306b3028214e", "score": 0.7787927730447262, "overlap_score": 0.8996345452005213, "semantic_score": 0.5975301148110335}, {"chunk_id": "p_72fe132cfcb0", "score": 0.7490407514713412, "overlap_score": 0.8033160407881429, "semantic_score": 0.6676278174961386}], "topk_raw": [{"chunk_id": "p_0e6b7c54fd12", "combined": 0.8981559953601477, "overlap": 1.0, "semantic": 0.7453899884003694}, {"chunk_id": "p_306b3028214e", "combined": 0.7787927730447262, "overlap": 0.8996345452005213, "semantic": 0.5975301148110335}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.7490407514713412, "overlap": 0.8033160407881429, "semantic": 0.6676278174961386}, {"chunk_id": "p_dfdadae1e18c", "combined": 0.5347099024751664, "overlap": 0.891183170791944, "semantic": 0.0}, {"chunk_id": "p_ed80d03c45ad", "combined": 0.5279416865710331, "overlap": 0.8799028109517218, "semantic": 0.0}, {"chunk_id": "p_05042af7b1aa", "combined": 0.42464078524178855, "overlap": 0.7077346420696476, "semantic": 0.0}, {"chunk_id": "p_a3ba3397e685", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_7dc1750f2080", "combined": 0.38450265651007925, "overlap": 0.6408377608501321, "semantic": 0.0}, {"chunk_id": "p_10c9c1f312c3", "combined": 0.3747098316709497, "overlap": 0.6245163861182494, "semantic": 0.0}, {"chunk_id": "p_aeea4bf88ec9", "combined": 0.36111987712734944, "overlap": 0.6018664618789158, "semantic": 0.0}]}
{"symbol_id": "cd4467681f0ba413f073b1af3808b1f6e6390157", "symbol_name": "write_file", "query_text_overlap": "content file encoding file_path write write_file open utf function", "query_text_semantic": "def write_file(file_path, content): # Function to write content to a file with UTF-8 encoding with open(file_path, 'w', encoding='utf-8') as file: file.write(content)", "best": {"chunk_id": "p_ed80d03c45ad", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_1134bdea6147", "score": 0.5463628649902883, "overlap_score": 0.9106047749838139, "semantic_score": 0.0}, {"chunk_id": "p_1ddee3c55441", "score": 0.5367660014933805, "overlap_score": 0.8946100024889675, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_ed80d03c45ad", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1134bdea6147", "combined": 0.5463628649902883, "overlap": 0.9106047749838139, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.5367660014933805, "overlap": 0.8946100024889675, "semantic": 0.0}, {"chunk_id": "p_b24a257cad58", "combined": 0.531648993685375, "overlap": 0.8860816561422917, "semantic": 0.0}, {"chunk_id": "p_7dc1750f2080", "combined": 0.436983098274448, "overlap": 0.7283051637907466, "semantic": 0.0}, {"chunk_id": "p_86702f9909a0", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.3998204900327826, "overlap": 0.666367483387971, "semantic": 0.0}, {"chunk_id": "p_32d0ee873290", "combined": 0.371536141421269, "overlap": 0.0, "semantic": 0.9288403535531724}, {"chunk_id": "p_1ef32940dd6f", "combined": 0.3390407150366689, "overlap": 0.0, "semantic": 0.8476017875916722}, {"chunk_id": "p_13436cbd731c", "combined": 0.3373186053857275, "overlap": 0.0, "semantic": 0.8432965134643187}]}
{"symbol_id": "3b18bc80919c9be2d7f03a3d7f410fcf5dc51d08", "symbol_name": "read_file", "query_text_overlap": "file encoding file_path read read_file open utf function content", "query_text_semantic": "def read_file(file_path): # Function to read file content with UTF-8 encoding with open(file_path, 'r', encoding='utf-8') as file: return file.read()", "best": {"chunk_id": "p_ed80d03c45ad", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_1134bdea6147", "score": 0.5463628649902883, "overlap_score": 0.9106047749838139, "semantic_score": 0.0}, {"chunk_id": "p_1ddee3c55441", "score": 0.5367660014933805, "overlap_score": 0.8946100024889675, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_ed80d03c45ad", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1134bdea6147", "combined": 0.5463628649902883, "overlap": 0.9106047749838139, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.5367660014933805, "overlap": 0.8946100024889675, "semantic": 0.0}, {"chunk_id": "p_b24a257cad58", "combined": 0.531648993685375, "overlap": 0.8860816561422917, "semantic": 0.0}, {"chunk_id": "p_7dc1750f2080", "combined": 0.436983098274448, "overlap": 0.7283051637907466, "semantic": 0.0}, {"chunk_id": "p_32d0ee873290", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.3998204900327826, "overlap": 0.666367483387971, "semantic": 0.0}, {"chunk_id": "p_86702f9909a0", "combined": 0.28781291418476, "overlap": 0.0, "semantic": 0.7195322854619}, {"chunk_id": "p_13436cbd731c", "combined": 0.2343633940527651, "overlap": 0.0, "semantic": 0.5859084851319127}, {"chunk_id": "p_be5c0e6704db", "combined": 0.22330826992632674, "overlap": 0.0, "semantic": 0.5582706748158168}]}
{"symbol_id": "ff7673506af26d1b4affc4b9f4088507e72c0d84", "symbol_name": "process_files", "query_text_overlap": "key file_design_content response print python_code json merged_data merged_data_copy output_file_path prompt not dict dumps ensure_ascii indent merged_data_str merged_json_path output_directory paper_content paper_path", "query_text_semantic": "def process_files(merged_json_path, paper_path, prompt_file_path, output_directory): paper_content = read_file(paper_path) prompt_template = read_file(prompt_file_path) with open(merged_json_path, 'r', encoding='utf-8') as f: merged_data = json.load(f) merged_data_copy = merged_data.copy() for key, file_design_content in merged_data.items(): if not isinstance(file_design_content, dict) or \"file_name\" not in file_design_content: print(f\"Skipping {key} because 'file_name' field not found or content is not a dict.\") continue output_file_path = os.path.join(output_directory, file_design_content[\"file_name\"]) python_file_content = json.dumps(file_design_content, ensure_ascii=False, indent=4) merged_data_str = json.dumps(merged_data_copy, ensure_ascii=False, indent=4) prompt = generate_prompt(prompt_template, paper_content, python_file_content, merged_data_str) write_file(\"/home/lzj/code_for_run/paper2code/test.py\", prompt) response = send_to_model(prompt) if response: python_code = extract_python_code(response) if python_code: save_generated_code(output_file_path, python_code) print(f\"Response for {key} saved to {output_file_path}\") merged_data_copy[key] = python_code else: print(f\"No Python code found in the response for {key}\") else: print(f\"Error processing {key}\")", "best": {"chunk_id": "p_dfdadae1e18c", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_86702f9909a0", "score": 0.564665142753338, "overlap_score": 0.9411085712555634, "semantic_score": 0.0}, {"chunk_id": "p_be5c0e6704db", "score": 0.49308455124208384, "overlap_score": 0.46003538138162586, "semantic_score": 0.5426583060327709}], "topk_raw": [{"chunk_id": "p_dfdadae1e18c", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_86702f9909a0", "combined": 0.564665142753338, "overlap": 0.9411085712555634, "semantic": 0.0}, {"chunk_id": "p_be5c0e6704db", "combined": 0.49308455124208384, "overlap": 0.46003538138162586, "semantic": 0.5426583060327709}, {"chunk_id": "p_d553c50ad036", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_a6ef97164a04", "combined": 0.37377410292270113, "overlap": 0.0, "semantic": 0.9344352573067528}, {"chunk_id": "p_fe60477d56a8", "combined": 0.3059074442640022, "overlap": 0.0, "semantic": 0.7647686106600055}, {"chunk_id": "p_604b80a68e9e", "combined": 0.29123993344053545, "overlap": 0.4853998890675591, "semantic": 0.0}, {"chunk_id": "p_deaeaab16e72", "combined": 0.2777728415519234, "overlap": 0.46295473591987235, "semantic": 0.0}, {"chunk_id": "p_26f46b1eb215", "combined": 0.26595855212363995, "overlap": 0.44326425353939997, "semantic": 0.0}, {"chunk_id": "p_6c8fad0a7bf9", "combined": 0.26276541199039566, "overlap": 0.4379423533173261, "semantic": 0.0}]}
{"symbol_id": "0e7855652d86d67eb006b2b6a9925b227daa6fef", "symbol_name": "extract_python_code", "query_text_overlap": "match extract_python_code response dotall group search strip python else", "query_text_semantic": "def extract_python_code(response): match = re.search(r'```python\\n(.*?)\\n```', response, re.DOTALL) if match: return match.group(1).strip() else: return None", "best": {"chunk_id": "p_306b3028214e", "score": 0.8415012378140287, "overlap_score": 1.0, "semantic_score": 0.603753094535072}, "alternatives": [{"chunk_id": "p_dfdadae1e18c", "score": 0.5943634616164987, "overlap_score": 0.9906057693608312, "semantic_score": 0.0}, {"chunk_id": "p_10c9c1f312c3", "score": 0.4165133872081689, "overlap_score": 0.6941889786802815, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_306b3028214e", "combined": 0.8415012378140287, "overlap": 1.0, "semantic": 0.603753094535072}, {"chunk_id": "p_dfdadae1e18c", "combined": 0.5943634616164987, "overlap": 0.9906057693608312, "semantic": 0.0}, {"chunk_id": "p_10c9c1f312c3", "combined": 0.4165133872081689, "overlap": 0.6941889786802815, "semantic": 0.0}, {"chunk_id": "p_aeea4bf88ec9", "combined": 0.4014073037256019, "overlap": 0.6690121728760032, "semantic": 0.0}, {"chunk_id": "p_a3ba3397e685", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_604b80a68e9e", "combined": 0.3440144938324082, "overlap": 0.5733574897206803, "semantic": 0.0}, {"chunk_id": "p_d133bf11d914", "combined": 0.3155284440520462, "overlap": 0.0, "semantic": 0.7888211101301155}, {"chunk_id": "p_ee4f1c9806fc", "combined": 0.29770461427880424, "overlap": 0.0, "semantic": 0.7442615356970106}, {"chunk_id": "p_32d0ee873290", "combined": 0.2868114758614006, "overlap": 0.0, "semantic": 0.7170286896535015}, {"chunk_id": "p_0e6b7c54fd12", "combined": 0.2606479840346075, "overlap": 0.0, "semantic": 0.6516199600865187}]}
{"symbol_id": "7061204ca3b62680ec4beb06b53ee379618f2e97", "symbol_name": "generate_prompt", "query_text_overlap": "prompt paper_content python_file_content replace whole_design generate_prompt prompt_template", "query_text_semantic": "def generate_prompt(prompt_template, paper_content, python_file_content, whole_design): prompt = prompt_template.replace(\"{paper_content}\", paper_content) prompt = prompt.replace(\"{python_file_content}\", python_file_content) prompt = prompt.replace(\"{whole_design}\", whole_design) return prompt", "best": {"chunk_id": "p_fe60477d56a8", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, "alternatives": [{"chunk_id": "p_3564944ad171", "score": 0.38073576203721565, "overlap_score": 0.0, "semantic_score": 0.9518394050930391}, {"chunk_id": "p_a3ba3397e685", "score": 0.3645905542107698, "overlap_score": 0.0, "semantic_score": 0.9114763855269244}], "topk_raw": [{"chunk_id": "p_fe60477d56a8", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_3564944ad171", "combined": 0.38073576203721565, "overlap": 0.0, "semantic": 0.9518394050930391}, {"chunk_id": "p_a3ba3397e685", "combined": 0.3645905542107698, "overlap": 0.0, "semantic": 0.9114763855269244}, {"chunk_id": "p_d27ffdd586de", "combined": 0.3551682036634869, "overlap": 0.0, "semantic": 0.8879205091587172}, {"chunk_id": "p_ee4f1c9806fc", "combined": 0.3133824249288024, "overlap": 0.0, "semantic": 0.783456062322006}, {"chunk_id": "p_44ec028abb24", "combined": 0.3062093841849043, "overlap": 0.0, "semantic": 0.7655234604622606}, {"chunk_id": "p_4ea8c34d23c1", "combined": 0.28625606449993674, "overlap": 0.0, "semantic": 0.7156401612498419}, {"chunk_id": "p_879f782bc115", "combined": 0.27302941347288684, "overlap": 0.0, "semantic": 0.6825735336822171}, {"chunk_id": "p_656c786ca087", "combined": 0.27130921119497875, "overlap": 0.0, "semantic": 0.6782730279874468}, {"chunk_id": "p_819605397810", "combined": 0.2678143324434931, "overlap": 0.0, "semantic": 0.6695358311087327}]}
{"symbol_id": "9392e08d2612a31bed9ec6e9470ff79496c17b0c", "symbol_name": "send_to_model", "query_text_overlap": "usage_info completion_tokens messages prompt prompt_tokens response total_tokens openai print send_to_model tokens chatcompletion create exception max_completion_tokens model content mini role user", "query_text_semantic": "def send_to_model(prompt): messages = [ {\"role\": \"user\", \"content\": \"You are a Python code implementation expert.\\n\\n\" + prompt} ] try: response = openai.ChatCompletion.create( model=\"o1-mini\", # 或 \"o1-mini\" messages=messages, max_completion_tokens=8000 ) usage_info = response['usage'] prompt_tokens = usage_info['prompt_tokens'] completion_tokens = usage_info['completion_tokens'] total_tokens = usage_info['total_tokens'] print(f\"Prompt tokens: {prompt_tokens}, Completion tokens: {completion_tokens}, Total tokens: {total_tokens}\") return response['choices'][0]['message']['content'] except Exception as e: print(f\"Error calling OpenAI API: {e}\") return None", "best": {"chunk_id": "p_6764289baa70", "score": 0.773741018405777, "overlap_score": 0.7620976711715668, "semantic_score": 0.7912060392570924}, "alternatives": [{"chunk_id": "p_ee4f1c9806fc", "score": 0.7037261580545868, "overlap_score": 0.6121872811423008, "semantic_score": 0.8410344734230156}, {"chunk_id": "p_0e6b7c54fd12", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_6764289baa70", "combined": 0.773741018405777, "overlap": 0.7620976711715668, "semantic": 0.7912060392570924}, {"chunk_id": "p_ee4f1c9806fc", "combined": 0.7037261580545868, "overlap": 0.6121872811423008, "semantic": 0.8410344734230156}, {"chunk_id": "p_0e6b7c54fd12", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_dfdadae1e18c", "combined": 0.5641063918871178, "overlap": 0.9401773198118629, "semantic": 0.0}, {"chunk_id": "p_06c808058b4d", "combined": 0.5432690284751428, "overlap": 0.9054483807919047, "semantic": 0.0}, {"chunk_id": "p_62969df043f7", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_bf24ebf30f09", "combined": 0.3934694236297337, "overlap": 0.6557823727162229, "semantic": 0.0}, {"chunk_id": "p_be5c0e6704db", "combined": 0.3902715316431763, "overlap": 0.0, "semantic": 0.9756788291079407}, {"chunk_id": "p_066d4d3d4711", "combined": 0.3865811928699759, "overlap": 0.6443019881166265, "semantic": 0.0}, {"chunk_id": "p_3564944ad171", "combined": 0.3732573884876662, "overlap": 0.0, "semantic": 0.9331434712191654}]}
{"symbol_id": "b9b429059a83a2737e79304ff17db321af916414", "symbol_name": "save_generated_code", "query_text_overlap": "file_path code file save_generated_code dirname encoding exist_ok makedirs open path write utf", "query_text_semantic": "def save_generated_code(file_path, code): os.makedirs(os.path.dirname(file_path), exist_ok=True) with open(file_path, 'w', encoding='utf-8') as file: file.write(code)", "best": {"chunk_id": "p_1134bdea6147", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_1ddee3c55441", "score": 0.5894610002488968, "overlap_score": 0.982435000414828, "semantic_score": 0.0}, {"chunk_id": "p_b24a257cad58", "score": 0.5838416492982098, "overlap_score": 0.9730694154970163, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_1134bdea6147", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.5894610002488968, "overlap": 0.982435000414828, "semantic": 0.0}, {"chunk_id": "p_b24a257cad58", "combined": 0.5838416492982098, "overlap": 0.9730694154970163, "semantic": 0.0}, {"chunk_id": "p_c6815d6eb10a", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_7cde073befc2", "combined": 0.3781757814634442, "overlap": 0.0, "semantic": 0.9454394536586105}, {"chunk_id": "p_86702f9909a0", "combined": 0.3039312664023861, "overlap": 0.0, "semantic": 0.7598281660059651}, {"chunk_id": "p_ba71050229e0", "combined": 0.27093035265386617, "overlap": 0.0, "semantic": 0.6773258816346654}, {"chunk_id": "p_8493448f361a", "combined": 0.2702144513766081, "overlap": 0.0, "semantic": 0.6755361284415202}, {"chunk_id": "p_8721154d2c1a", "combined": 0.2674034981439187, "overlap": 0.0, "semantic": 0.6685087453597968}, {"chunk_id": "p_44ec028abb24", "combined": 0.26648561201410326, "overlap": 0.0, "semantic": 0.6662140300352581}]}
{"symbol_id": "5522599ecb2c2fa91b775a92cb9658220cddc5d5", "symbol_name": "write_file", "query_text_overlap": "content file file_path write_file encoding open write utf", "query_text_semantic": "def write_file(file_path, content): with open(file_path, 'w', encoding='utf-8') as file: file.write(content)", "best": {"chunk_id": "p_1134bdea6147", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_1ddee3c55441", "score": 0.5894610002488968, "overlap_score": 0.982435000414828, "semantic_score": 0.0}, {"chunk_id": "p_b24a257cad58", "score": 0.5838416492982098, "overlap_score": 0.9730694154970163, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_1134bdea6147", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.5894610002488968, "overlap": 0.982435000414828, "semantic": 0.0}, {"chunk_id": "p_b24a257cad58", "combined": 0.5838416492982098, "overlap": 0.9730694154970163, "semantic": 0.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.4390713743400802, "overlap": 0.7317856239001337, "semantic": 0.0}, {"chunk_id": "p_86702f9909a0", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_13436cbd731c", "combined": 0.3651126900868741, "overlap": 0.0, "semantic": 0.9127817252171851}, {"chunk_id": "p_32d0ee873290", "combined": 0.34088551817835744, "overlap": 0.0, "semantic": 0.8522137954458935}, {"chunk_id": "p_be5c0e6704db", "combined": 0.3365609219870061, "overlap": 0.0, "semantic": 0.8414023049675152}, {"chunk_id": "p_f8cf778251a1", "combined": 0.31305112785413963, "overlap": 0.0, "semantic": 0.782627819635349}, {"chunk_id": "p_1ef32940dd6f", "combined": 0.30722498498080303, "overlap": 0.0, "semantic": 0.7680624624520075}]}
{"symbol_id": "00c649c923092e36f57e3980c57bd8adbaa74c72", "symbol_name": "read_file", "query_text_overlap": "file file_path read_file encoding open read utf", "query_text_semantic": "def read_file(file_path): with open(file_path, 'r', encoding='utf-8') as file: return file.read()", "best": {"chunk_id": "p_1134bdea6147", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_1ddee3c55441", "score": 0.5894610002488968, "overlap_score": 0.982435000414828, "semantic_score": 0.0}, {"chunk_id": "p_b24a257cad58", "score": 0.5838416492982098, "overlap_score": 0.9730694154970163, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_1134bdea6147", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.5894610002488968, "overlap": 0.982435000414828, "semantic": 0.0}, {"chunk_id": "p_b24a257cad58", "combined": 0.5838416492982098, "overlap": 0.9730694154970163, "semantic": 0.0}, {"chunk_id": "p_32d0ee873290", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_86702f9909a0", "combined": 0.35788572556624576, "overlap": 0.0, "semantic": 0.8947143139156144}, {"chunk_id": "p_13436cbd731c", "combined": 0.31859306031544987, "overlap": 0.0, "semantic": 0.7964826507886246}, {"chunk_id": "p_be5c0e6704db", "combined": 0.2684266062312823, "overlap": 0.0, "semantic": 0.6710665155782057}, {"chunk_id": "p_306b3028214e", "combined": 0.20783275817133498, "overlap": 0.0, "semantic": 0.5195818954283374}, {"chunk_id": "p_c6815d6eb10a", "combined": 0.2004335433796056, "overlap": 0.0, "semantic": 0.5010838584490139}, {"chunk_id": "p_ba71050229e0", "combined": 0.1970857428277302, "overlap": 0.0, "semantic": 0.4927143570693255}]}
{"symbol_id": "93f6314092807d8a074dfb752e29b3a27fe4ce07", "symbol_name": "main", "query_text_overlap": "print main response error full_prompt model new_main_py_code openai read_file response_text original_eval_py original_main_py prompt_text replace code_generate chatcompletion create encoding exception extract_python_code", "query_text_semantic": "def main(): try: prompt_text = read_file(\"prompt/code/finetune.md\") original_main_py = read_file(\"iter_code/paper/code_generate/main.py\") original_eval_py = read_file(\"code_generate/evaluation/evaluate.py\") full_prompt = prompt_text.replace(\"{template}\", original_main_py).replace(\"{evaluate}\", original_eval_py) print(full_prompt) response = openai.ChatCompletion.create( model=\"o1-mini\", # or \"gpt-4o\" if that's your custom model name messages=[{\"role\": \"user\", \"content\": full_prompt}], max_completion_tokens=8000 ) print(response) response_text = response[\"choices\"][0][\"message\"][\"content\"] #print(response_text) new_main_py_code = extract_python_code(response_text) if new_main_py_code: with open(\"iter_code/paper/code_generate/main.py\", \"w\", encoding=\"utf-8\") as f: f.write(new_main_py_code) print(\"main.py has been updated successfully.\") else: print(\"No Python code block found in the model's response. main.py was not changed.\") except openai.error.OpenAIError as e: print(f\"Error calling OpenAI API: {e}\") except Exception as e: print(f\"An error occurred: {e}\")", "best": {"chunk_id": "p_62969df043f7", "score": 0.664693773177997, "overlap_score": 0.4538896929078964, "semantic_score": 0.9808998935831481}, "alternatives": [{"chunk_id": "p_ee4f1c9806fc", "score": 0.6392918334915992, "overlap_score": 0.47651375166405985, "semantic_score": 0.8834589562329083}, {"chunk_id": "p_ba71050229e0", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_62969df043f7", "combined": 0.664693773177997, "overlap": 0.4538896929078964, "semantic": 0.9808998935831481}, {"chunk_id": "p_ee4f1c9806fc", "combined": 0.6392918334915992, "overlap": 0.47651375166405985, "semantic": 0.8834589562329083}, {"chunk_id": "p_ba71050229e0", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_dfdadae1e18c", "combined": 0.43908859497086516, "overlap": 0.7318143249514419, "semantic": 0.0}, {"chunk_id": "p_06c808058b4d", "combined": 0.4228692279240683, "overlap": 0.7047820465401138, "semantic": 0.0}, {"chunk_id": "p_306b3028214e", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_2789c080bebf", "combined": 0.3651181512390333, "overlap": 0.0, "semantic": 0.9127953780975832}, {"chunk_id": "p_3564944ad171", "combined": 0.33464052050226684, "overlap": 0.0, "semantic": 0.836601301255667}, {"chunk_id": "p_a3ba3397e685", "combined": 0.32184515537444014, "overlap": 0.0, "semantic": 0.8046128884361002}, {"chunk_id": "p_be5c0e6704db", "combined": 0.3207815834645981, "overlap": 0.0, "semantic": 0.8019539586614952}]}
{"symbol_id": "4915f25a0f4bb2f6a90954b17c94c35f11fdfac8", "symbol_name": "extract_python_code", "query_text_overlap": "text python match code fence string extract_python_code pattern str dotall group search strip find first fenced block example returns inside", "query_text_semantic": "Find the first fenced Python code block in the text.\n    Example fence:\n    python ...\n    \n    Returns the code (string) inside the fence or an empty string if not found.", "best": {"chunk_id": "p_079b4a86eb43", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_d85f95403d5f", "score": 0.5552538376378456, "overlap_score": 0.9254230627297428, "semantic_score": 0.0}, {"chunk_id": "p_871196a252e8", "score": 0.5271717962251787, "overlap_score": 0.8786196603752979, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_079b4a86eb43", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_d85f95403d5f", "combined": 0.5552538376378456, "overlap": 0.9254230627297428, "semantic": 0.0}, {"chunk_id": "p_871196a252e8", "combined": 0.5271717962251787, "overlap": 0.8786196603752979, "semantic": 0.0}, {"chunk_id": "p_f8f9f7509cdb", "combined": 0.48395555568166126, "overlap": 0.8065925928027688, "semantic": 0.0}, {"chunk_id": "p_10c9c1f312c3", "combined": 0.4607777914215817, "overlap": 0.7679629857026362, "semantic": 0.0}, {"chunk_id": "p_1c963b973e40", "combined": 0.4479269929624027, "overlap": 0.7465449882706712, "semantic": 0.0}, {"chunk_id": "p_aeea4bf88ec9", "combined": 0.444066329082321, "overlap": 0.740110548470535, "semantic": 0.0}, {"chunk_id": "p_a3ba3397e685", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_5fa9be1911ff", "combined": 0.39670787384496176, "overlap": 0.0, "semantic": 0.9917696846124043}, {"chunk_id": "p_7557473886f3", "combined": 0.3874007693097015, "overlap": 0.6456679488495025, "semantic": 0.0}]}
{"symbol_id": "fc45293044c02eb6667df782c940ded9897e2cec", "symbol_name": "read_file", "query_text_overlap": "read path read_file str encoding open utility function text content file utf", "query_text_semantic": "Utility function to read text content from a file.", "best": {"chunk_id": "p_ed80d03c45ad", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_1134bdea6147", "score": 0.5463628649902883, "overlap_score": 0.9106047749838139, "semantic_score": 0.0}, {"chunk_id": "p_1ddee3c55441", "score": 0.5367660014933805, "overlap_score": 0.8946100024889675, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_ed80d03c45ad", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1134bdea6147", "combined": 0.5463628649902883, "overlap": 0.9106047749838139, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.5367660014933805, "overlap": 0.8946100024889675, "semantic": 0.0}, {"chunk_id": "p_b24a257cad58", "combined": 0.531648993685375, "overlap": 0.8860816561422917, "semantic": 0.0}, {"chunk_id": "p_a845eb7471db", "combined": 0.49998640876984646, "overlap": 0.35310070387735054, "semantic": 0.7203149661085902}, {"chunk_id": "p_7dc1750f2080", "combined": 0.436983098274448, "overlap": 0.7283051637907466, "semantic": 0.0}, {"chunk_id": "p_32d0ee873290", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.3998204900327826, "overlap": 0.666367483387971, "semantic": 0.0}, {"chunk_id": "p_4d5db820cc64", "combined": 0.3063450313780424, "overlap": 0.0, "semantic": 0.765862578445106}, {"chunk_id": "p_066d4d3d4711", "combined": 0.303300306929013, "overlap": 0.0, "semantic": 0.7582507673225325}]}
{"symbol_id": "c279c00419f8a1b3a0c802ce6ea8ae5ef1141cba", "symbol_name": "extract_and_merge_json", "query_text_overlap": "json file_name files directory file_path files_with_order content file match merged_json output_file extract_and_merge_json extracted_json file_order out_file root sort their merged append", "query_text_semantic": "Extracts JSON content from all .py files in the directory and merges into one JSON file\n    with file names as keys and their corresponding JSON content as values.", "best": {"chunk_id": "p_d553c50ad036", "score": 0.6996047462964894, "overlap_score": 0.5628221206714263, "semantic_score": 0.904778684734084}, "alternatives": [{"chunk_id": "p_1134bdea6147", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, {"chunk_id": "p_1ddee3c55441", "score": 0.5894610002488968, "overlap_score": 0.982435000414828, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_d553c50ad036", "combined": 0.6996047462964894, "overlap": 0.5628221206714263, "semantic": 0.904778684734084}, {"chunk_id": "p_1134bdea6147", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.5894610002488968, "overlap": 0.982435000414828, "semantic": 0.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.4390713743400802, "overlap": 0.7317856239001337, "semantic": 0.0}, {"chunk_id": "p_8b7a77e0372c", "combined": 0.4266601178322637, "overlap": 0.7111001963871062, "semantic": 0.0}, {"chunk_id": "p_d338aec92e8c", "combined": 0.4266601178322637, "overlap": 0.7111001963871062, "semantic": 0.0}, {"chunk_id": "p_a6ef97164a04", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_fc643031b2f0", "combined": 0.3754679628631083, "overlap": 0.0, "semantic": 0.9386699071577707}, {"chunk_id": "p_efae9e409c4f", "combined": 0.3739310171079978, "overlap": 0.623218361846663, "semantic": 0.0}, {"chunk_id": "p_10c9c1f312c3", "combined": 0.3397645207694032, "overlap": 0.5662742012823387, "semantic": 0.0}]}
{"symbol_id": "5402b1bb01cd0ca12fbc60e34600fc94e950c59a", "symbol_name": "extract_json_from_file", "query_text_overlap": "json content file inside_json current_json line file_path json_blocks cleaned_json extract_json_from_file json_data strip append clean_json_content encoding jsondecodeerror loads open print read", "query_text_semantic": "Extracts JSON content enclosed in ```json ... ``` from a given file.", "best": {"chunk_id": "p_1134bdea6147", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_1ddee3c55441", "score": 0.5894610002488968, "overlap_score": 0.982435000414828, "semantic_score": 0.0}, {"chunk_id": "p_b24a257cad58", "score": 0.5838416492982098, "overlap_score": 0.9730694154970163, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_1134bdea6147", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.5894610002488968, "overlap": 0.982435000414828, "semantic": 0.0}, {"chunk_id": "p_b24a257cad58", "combined": 0.5838416492982098, "overlap": 0.9730694154970163, "semantic": 0.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.4390713743400802, "overlap": 0.7317856239001337, "semantic": 0.0}, {"chunk_id": "p_03643421fd58", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_d553c50ad036", "combined": 0.33476322357053184, "overlap": 0.0, "semantic": 0.8369080589263296}, {"chunk_id": "p_ed03455de360", "combined": 0.3228818529418871, "overlap": 0.0, "semantic": 0.8072046323547176}, {"chunk_id": "p_a6ef97164a04", "combined": 0.3226546377684378, "overlap": 0.0, "semantic": 0.8066365944210944}, {"chunk_id": "p_3f0c53dcc88b", "combined": 0.3203909690200988, "overlap": 0.0, "semantic": 0.800977422550247}, {"chunk_id": "p_779699e079a4", "combined": 0.31452528833652044, "overlap": 0.0, "semantic": 0.7863132208413011}]}
{"symbol_id": "038d90b2db7ab5699d84c2f26dc32a13829b0b82", "symbol_name": "clean_json_content", "query_text_overlap": "cleaned_content content comments clean_json_content sub dotall flags cleans json removing lines starting remove line comment single optionally multi", "query_text_semantic": "Cleans the JSON content by removing comments (e.g., lines starting with //).", "best": {"chunk_id": "p_066d4d3d4711", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_40aa5ed49d3a", "score": 0.45965079270650516, "overlap_score": 0.766084654510842, "semantic_score": 0.0}, {"chunk_id": "p_03643421fd58", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_066d4d3d4711", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_40aa5ed49d3a", "combined": 0.45965079270650516, "overlap": 0.766084654510842, "semantic": 0.0}, {"chunk_id": "p_03643421fd58", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_4354e0edb325", "combined": 0.3812025820884927, "overlap": 0.6353376368141546, "semantic": 0.0}, {"chunk_id": "p_07d58ef4e5c5", "combined": 0.3659086105173099, "overlap": 0.0, "semantic": 0.9147715262932746}, {"chunk_id": "p_779699e079a4", "combined": 0.35828580507009855, "overlap": 0.0, "semantic": 0.8957145126752464}, {"chunk_id": "p_d338aec92e8c", "combined": 0.3487647514061761, "overlap": 0.5812745856769601, "semantic": 0.0}, {"chunk_id": "p_637dfb27da97", "combined": 0.3416489213064431, "overlap": 0.0, "semantic": 0.8541223032661077}, {"chunk_id": "p_3fa1c2469b93", "combined": 0.3400616375136256, "overlap": 0.5667693958560427, "semantic": 0.0}, {"chunk_id": "p_34ad3b3af1d4", "combined": 0.33465369008124063, "overlap": 0.557756150135401, "semantic": 0.0}]}
{"symbol_id": "90101ade7e22a813e3ec75926999edf84671c6c3", "symbol_name": "len", "query_text_overlap": "len llm_chat_templates output size advance begin c_str first llama_chat_builtin_templates min int32_t size_t std template not supported const char auto", "query_text_semantic": "template not supported", "best": {"chunk_id": "p_d6c63fb60550", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_f8f9f7509cdb", "score": 0.44710737708392956, "overlap_score": 0.7451789618065493, "semantic_score": 0.0}, {"chunk_id": "p_1c963b973e40", "score": 0.4138220144335882, "overlap_score": 0.6897033573893137, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_d6c63fb60550", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_f8f9f7509cdb", "combined": 0.44710737708392956, "overlap": 0.7451789618065493, "semantic": 0.0}, {"chunk_id": "p_1c963b973e40", "combined": 0.4138220144335882, "overlap": 0.6897033573893137, "semantic": 0.0}, {"chunk_id": "p_06c808058b4d", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_62969df043f7", "combined": 0.3970733476252713, "overlap": 0.6617889127087855, "semantic": 0.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.32990046770313597, "overlap": 0.54983411283856, "semantic": 0.0}, {"chunk_id": "p_604b80a68e9e", "combined": 0.29486328937702044, "overlap": 0.4914388156283674, "semantic": 0.0}, {"chunk_id": "p_6e45a91dba7e", "combined": 0.29032959562067523, "overlap": 0.0, "semantic": 0.725823989051688}, {"chunk_id": "p_deaeaab16e72", "combined": 0.2812286515520893, "overlap": 0.46871441925348223, "semantic": 0.0}, {"chunk_id": "p_be5c0e6704db", "combined": 0.2794552467751359, "overlap": 0.4657587446252265, "semantic": 0.0}]}
{"symbol_id": "85e4eb48776c5717f523d628744ffc6758ee2c42", "symbol_name": "add_ass", "query_text_overlap": "tmpl message content std role string trailing_space template https add_ass chat else mistralai instruct llm_chat_template_mistral_v1 llm_chat_template_mistral_v3 llm_chat_template_mistral_v3_tekken llm_chat_template_mistral_v7 system_prompt const", "query_text_semantic": "Simple version of \"llama_apply_chat_template\" that only works with strings\nThis function uses heuristic checks to determine commonly used template. It is not a jinja parser.", "best": {"chunk_id": "p_306b3028214e", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_f121cc4568d7", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, {"chunk_id": "p_49a475956d84", "score": 0.3819380912128165, "overlap_score": 0.0, "semantic_score": 0.9548452280320412}], "topk_raw": [{"chunk_id": "p_306b3028214e", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_f121cc4568d7", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_49a475956d84", "combined": 0.3819380912128165, "overlap": 0.0, "semantic": 0.9548452280320412}, {"chunk_id": "p_8ef457a89649", "combined": 0.380516137342511, "overlap": 0.0, "semantic": 0.9512903433562774}, {"chunk_id": "p_549352ad713c", "combined": 0.380516137342511, "overlap": 0.0, "semantic": 0.9512903433562774}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.3792218444373905, "overlap": 0.6320364073956508, "semantic": 0.0}, {"chunk_id": "p_5f1ad173d443", "combined": 0.3708956889264582, "overlap": 0.0, "semantic": 0.9272392223161454}, {"chunk_id": "p_b61248c659ee", "combined": 0.36548510244334426, "overlap": 0.0, "semantic": 0.9137127561083606}, {"chunk_id": "p_3d12e9f7b9ac", "combined": 0.3640957372298032, "overlap": 0.0, "semantic": 0.9102393430745079}, {"chunk_id": "p_871196a252e8", "combined": 0.36143576862697746, "overlap": 0.0, "semantic": 0.9035894215674436}]}
{"symbol_id": "5c0362c5970fac35b941fe125c5b529167e65ea0", "symbol_name": "tmpl", "query_text_overlap": "tmpl_contains else tmpl inst bool add_bos_inside_history find haystack string strip_message support_system_message const std official templates see https llm_chat_detect_template llm_chat_template llm_chat_template_chatglm_4", "query_text_semantic": "llm_chat_template llm_chat_detect_template(const std::string & tmpl) { try { return llm_chat_template_from_str(tmpl); } catch (const std::out_of_range &) { // ignore } auto tmpl_contains = [&tmpl](const char * haystack) -> bool { return tmpl.find(haystack) != std::string::npos; }; if (tmpl_contains(\"<|im_start|>\")) { return tmpl_contains(\"<|im_sep|>\") ? LLM_CHAT_TEMPLATE_PHI_4 : tmpl_contains(\"<end_of_utterance>\") ? LLM_CHAT_TEMPLATE_SMOLVLM // SmolVLM uses <|im_start|> as BOS, but it is NOT chatml : LLM_CHAT_TEMPLATE_CHATML; } else if (tmpl.find(\"mistral\") == 0 || tmpl_contains(\"[INST]\")) { if (tmpl_contains(\"[SYSTEM_PROMPT]\")) { return LLM_CHAT_TEMPLATE_MISTRAL_V7; } else if ( // catches official 'v1' template tmpl_contains(\"' [INST] ' + system_message\") // catches official 'v3' and 'v3-tekken' templates || tmpl_contains(\"[AVAILABLE_TOOLS]\") ) { // Official mistral 'v1', 'v3' and 'v3-tekken' templates // See: https://github.com/mistralai/cookbook/blob/main/concept-deep-dive/tokenization/chat_templates.md // See: https://github.com/mistralai/cookbook/blob/main/concept-deep-dive/tokenization/templates.md if (tmpl_contains(\" [INST]\")) { return LLM_CHAT_TEMPLATE_MISTRAL_V1; } else if", "best": {"chunk_id": "p_306b3028214e", "score": 1.0, "overlap_score": 1.0, "semantic_score": 1.0}, "alternatives": [{"chunk_id": "p_7554a8bf000d", "score": 0.5661700505015682, "overlap_score": 0.943616750835947, "semantic_score": 0.0}, {"chunk_id": "p_079b4a86eb43", "score": 0.542361279075301, "overlap_score": 0.9039354651255017, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_306b3028214e", "combined": 1.0, "overlap": 1.0, "semantic": 1.0}, {"chunk_id": "p_7554a8bf000d", "combined": 0.5661700505015682, "overlap": 0.943616750835947, "semantic": 0.0}, {"chunk_id": "p_079b4a86eb43", "combined": 0.542361279075301, "overlap": 0.9039354651255017, "semantic": 0.0}, {"chunk_id": "p_d85f95403d5f", "combined": 0.5019136359878859, "overlap": 0.8365227266464765, "semantic": 0.0}, {"chunk_id": "p_871196a252e8", "combined": 0.4765292828218532, "overlap": 0.7942154713697553, "semantic": 0.0}, {"chunk_id": "p_2fff3a9c3c27", "combined": 0.37400024521787306, "overlap": 0.0, "semantic": 0.9350006130446826}, {"chunk_id": "p_40d488fb7200", "combined": 0.34842791628887476, "overlap": 0.0, "semantic": 0.8710697907221868}, {"chunk_id": "p_62969df043f7", "combined": 0.3419633676789725, "overlap": 0.0, "semantic": 0.8549084191974312}, {"chunk_id": "p_bd75b6a622ed", "combined": 0.3381625511942767, "overlap": 0.0, "semantic": 0.8454063779856916}, {"chunk_id": "p_49a475956d84", "combined": 0.32781514407054607, "overlap": 0.0, "semantic": 0.8195378601763651}]}
{"symbol_id": "1a4bcdee172983eb63b10a9ef51170ffc2b5d68a", "symbol_name": "name", "query_text_overlap": "name llm_chat_template llm_chat_template_from_str llm_chat_templates string const std", "query_text_semantic": "llm_chat_template llm_chat_template_from_str(const std::string & name) { return LLM_CHAT_TEMPLATES.at(name); }", "best": {"chunk_id": "p_173a78262c46", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, "alternatives": [{"chunk_id": "p_86702f9909a0", "score": 0.39321817527503306, "overlap_score": 0.0, "semantic_score": 0.9830454381875826}, {"chunk_id": "p_5437074302fb", "score": 0.37860062024921337, "overlap_score": 0.0, "semantic_score": 0.9465015506230334}], "topk_raw": [{"chunk_id": "p_173a78262c46", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_86702f9909a0", "combined": 0.39321817527503306, "overlap": 0.0, "semantic": 0.9830454381875826}, {"chunk_id": "p_5437074302fb", "combined": 0.37860062024921337, "overlap": 0.0, "semantic": 0.9465015506230334}, {"chunk_id": "p_079b4a86eb43", "combined": 0.3635307115011675, "overlap": 0.0, "semantic": 0.9088267787529187}, {"chunk_id": "p_b06142b4f967", "combined": 0.34726248556988776, "overlap": 0.0, "semantic": 0.8681562139247193}, {"chunk_id": "p_c7548d500b72", "combined": 0.34591616688624166, "overlap": 0.0, "semantic": 0.8647904172156041}, {"chunk_id": "p_e72dff6802d1", "combined": 0.34553944568379613, "overlap": 0.0, "semantic": 0.8638486142094902}, {"chunk_id": "p_3d12e9f7b9ac", "combined": 0.3447671835364785, "overlap": 0.0, "semantic": 0.8619179588411962}, {"chunk_id": "p_b61248c659ee", "combined": 0.34328768525938913, "overlap": 0.0, "semantic": 0.8582192131484728}, {"chunk_id": "p_8b7a77e0372c", "combined": 0.34221199555968307, "overlap": 0.0, "semantic": 0.8555299888992076}]}
{"symbol_id": "1dc9f24e8baa46ecd2bbe6e2c27b3f48283e62d4", "symbol_name": "str", "query_text_overlap": "end start str string isspace static_cast trim size substr std size_t unsigned char whitespace beginning static const", "query_text_semantic": "trim whitespace from the beginning and end of a string", "best": {"chunk_id": "p_d6c63fb60550", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_40aa5ed49d3a", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, {"chunk_id": "p_479c7c3a9ade", "score": 0.34460861124325004, "overlap_score": 0.0, "semantic_score": 0.861521528108125}], "topk_raw": [{"chunk_id": "p_d6c63fb60550", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_40aa5ed49d3a", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_479c7c3a9ade", "combined": 0.34460861124325004, "overlap": 0.0, "semantic": 0.861521528108125}, {"chunk_id": "p_879f782bc115", "combined": 0.27263480777471466, "overlap": 0.0, "semantic": 0.6815870194367866}, {"chunk_id": "p_6a42cd47402f", "combined": 0.24529959880770438, "overlap": 0.0, "semantic": 0.6132489970192609}, {"chunk_id": "p_2af875f043d8", "combined": 0.23782349426350355, "overlap": 0.0, "semantic": 0.5945587356587588}, {"chunk_id": "p_ed49dd17aa2d", "combined": 0.20847303715822196, "overlap": 0.0, "semantic": 0.5211825928955549}, {"chunk_id": "p_ffbd1cc3f174", "combined": 0.20614873411884607, "overlap": 0.0, "semantic": 0.5153718352971152}, {"chunk_id": "p_f263b09897fb", "combined": 0.20348050294663797, "overlap": 0.0, "semantic": 0.5087012573665949}, {"chunk_id": "p_c6815d6eb10a", "combined": 0.19105668894750186, "overlap": 0.0, "semantic": 0.47764172236875463}]}
{"symbol_id": "da64145b5dd3581403e4ba2e9b7cbe712cba50dc", "symbol_name": "HierholzerEulerianPath", "query_text_overlap": "graph adjacencylist public list int vertex vertices param hierholzereulerianpath node numnodes number add arraylist get integer directed given addedge getedges", "query_text_semantic": "public class HierholzerEulerianPath { /** * Simple directed graph represented by adjacency lists. */ public static class Graph { private final List<List<Integer>> adjacencyList; /** * Constructs a graph with a given number of vertices. * * @param numNodes number of vertices */ public Graph(int numNodes) { adjacencyList = new ArrayList<>(); for (int i = 0; i < numNodes; i++) { adjacencyList.add(new ArrayList<>()); } } /** * Adds a directed edge from vertex {@code from} to vertex {@code to}. * * @param from source vertex * @param to destination vertex */ public void addEdge(int from, int to) { adjacencyList.get(from).add(to); } /** * Returns a list of outgoing edges from the given vertex. * * @param node vertex index * @return list", "best": {"chunk_id": "p_84aa4d0220d5", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_7557473886f3", "score": 0.568484059837546, "overlap_score": 0.6528371550251422, "semantic_score": 0.4419544170561516}, {"chunk_id": "p_066d4d3d4711", "score": 0.5473882065319926, "overlap_score": 0.912313677553321, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_84aa4d0220d5", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_7557473886f3", "combined": 0.568484059837546, "overlap": 0.6528371550251422, "semantic": 0.4419544170561516}, {"chunk_id": "p_066d4d3d4711", "combined": 0.5473882065319926, "overlap": 0.912313677553321, "semantic": 0.0}, {"chunk_id": "p_bf24ebf30f09", "combined": 0.46909430624267806, "overlap": 0.7818238437377968, "semantic": 0.0}, {"chunk_id": "p_841f6201bb1f", "combined": 0.4655368638610212, "overlap": 0.7758947731017021, "semantic": 0.0}, {"chunk_id": "p_ab2e640961d6", "combined": 0.42670512665590493, "overlap": 0.7111752110931749, "semantic": 0.0}, {"chunk_id": "p_6a42cd47402f", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_8493448f361a", "combined": 0.3876191430031393, "overlap": 0.6460319050052322, "semantic": 0.0}, {"chunk_id": "p_168ccbaad0ba", "combined": 0.3056165405211995, "overlap": 0.5093609008686659, "semantic": 0.0}, {"chunk_id": "p_7554a8bf000d", "combined": 0.250699550714539, "overlap": 0.41783258452423166, "semantic": 0.0}]}
{"symbol_id": "51e4c229f71a038e074b4f10e020f12f473b7aa8", "symbol_name": "allNonZeroDegreeVerticesWeaklyConnected", "query_text_overlap": "int visited stack startnode degree indegree outdegree push param allnonzerodegreeverticesweaklyconnected getedges graph vertices non zero boolean arraydeque deque integer isempty", "query_text_semantic": "Checks weak connectivity (undirected) among vertices that have non-zero degree.\n\n@param startNode node to start DFS from (must be a vertex with non-zero degree)\n@param n number of vertices\n@param outDegree out-degree array\n@param inDegree in-degree array\n@return true if all vertices having non-zero degree belong to a single weak component\n/", "best": {"chunk_id": "p_0f1678673701", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_1be9b0de271b", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, {"chunk_id": "p_b43208b407f5", "score": 0.3892730112893049, "overlap_score": 0.0, "semantic_score": 0.9731825282232622}], "topk_raw": [{"chunk_id": "p_0f1678673701", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_1be9b0de271b", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_b43208b407f5", "combined": 0.3892730112893049, "overlap": 0.0, "semantic": 0.9731825282232622}, {"chunk_id": "p_d553c50ad036", "combined": 0.38520455421290356, "overlap": 0.0, "semantic": 0.9630113855322588}, {"chunk_id": "p_173a78262c46", "combined": 0.3845191219847035, "overlap": 0.0, "semantic": 0.9612978049617588}, {"chunk_id": "p_8a0b714ca1a9", "combined": 0.3819295239814675, "overlap": 0.0, "semantic": 0.9548238099536688}, {"chunk_id": "p_d052dfdfe27b", "combined": 0.36738793519406543, "overlap": 0.0, "semantic": 0.9184698379851636}, {"chunk_id": "p_6e246aa6ffa6", "combined": 0.3673605149722934, "overlap": 0.0, "semantic": 0.9184012874307335}, {"chunk_id": "p_8ef457a89649", "combined": 0.3641075528872568, "overlap": 0.0, "semantic": 0.910268882218142}, {"chunk_id": "p_549352ad713c", "combined": 0.3641075528872568, "overlap": 0.0, "semantic": 0.910268882218142}]}
{"symbol_id": "8c086d040b9cb375ef56953569c5806a81cdf237", "symbol_name": "rotateEulerianCircuitIfNeeded", "query_text_overlap": "int path currentindex integer node idx outdegree preferredstart rotated diff endcount list startcount add indegree length rotateeuleriancircuitifneeded replaced indexed loop", "query_text_semantic": "private List<Integer> rotateEulerianCircuitIfNeeded(List<Integer> path, int[] outDegree, int[] inDegree) { int startCount = 0; int endCount = 0; for (int i = 0; i < outDegree.length; i++) { int diff = outDegree[i] - inDegree[i]; if (diff == 1) { startCount++; } else if (diff == -1) { endCount++; } } if (startCount == 0 && endCount == 0 && !path.isEmpty()) { int preferredStart = -1; for (int i = 0; i < outDegree.length; i++) { if (outDegree[i] > 0) { preferredStart = i; break; } } if (preferredStart != -1 && path.get(0) != preferredStart) { int idx = 0; for (Integer node : path) { // replaced indexed loop if (node == preferredStart) { break; } idx++; } if (idx >", "best": {"chunk_id": "p_066d4d3d4711", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_7557473886f3", "score": 0.42935045549856055, "overlap_score": 0.7155840924976009, "semantic_score": 0.0}, {"chunk_id": "p_0322ed83358b", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_066d4d3d4711", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_7557473886f3", "combined": 0.42935045549856055, "overlap": 0.7155840924976009, "semantic": 0.0}, {"chunk_id": "p_0322ed83358b", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_1be9b0de271b", "combined": 0.38361473177015726, "overlap": 0.0, "semantic": 0.9590368294253931}, {"chunk_id": "p_2fff3a9c3c27", "combined": 0.3582616093412121, "overlap": 0.0, "semantic": 0.8956540233530301}, {"chunk_id": "p_b43208b407f5", "combined": 0.3101222752969084, "overlap": 0.0, "semantic": 0.7753056882422709}, {"chunk_id": "p_d309f18fcabf", "combined": 0.3063742555057944, "overlap": 0.0, "semantic": 0.7659356387644859}, {"chunk_id": "p_fa25037fd0dc", "combined": 0.29891197313954976, "overlap": 0.0, "semantic": 0.7472799328488744}, {"chunk_id": "p_d338aec92e8c", "combined": 0.2889706092723352, "overlap": 0.0, "semantic": 0.722426523180838}, {"chunk_id": "p_6a42cd47402f", "combined": 0.2865471136445002, "overlap": 0.0, "semantic": 0.7163677841112505}]}
{"symbol_id": "4ececa757d339b5712e4f58cd20319c3cff57a03", "symbol_name": "buildHierholzerPath", "query_text_overlap": "stack integer path tempadj list int new add arraydeque arraylist buildhierholzerpath deque get isempty push startnode collections getedges graph peek", "query_text_semantic": "private List<Integer> buildHierholzerPath(int startNode, int n) { List<Deque<Integer>> tempAdj = new ArrayList<>(); for (int i = 0; i < n; i++) { tempAdj.add(new ArrayDeque<>(graph.getEdges(i))); } Deque<Integer> stack = new ArrayDeque<>(); List<Integer> path = new ArrayList<>(); stack.push(startNode); while (!stack.isEmpty()) { int u = stack.peek(); if (!tempAdj.get(u).isEmpty()) { stack.push(tempAdj.get(u).pollFirst()); } else { path.add(stack.pop()); } } Collections.reverse(path); return path; }", "best": {"chunk_id": "p_d553c50ad036", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_84aa4d0220d5", "score": 0.5504522275504642, "overlap_score": 0.9174203792507737, "semantic_score": 0.0}, {"chunk_id": "p_5b014b6eccd1", "score": 0.5224730143958001, "overlap_score": 0.8707883573263335, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_d553c50ad036", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_84aa4d0220d5", "combined": 0.5504522275504642, "overlap": 0.9174203792507737, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.5224730143958001, "overlap": 0.8707883573263335, "semantic": 0.0}, {"chunk_id": "p_066d4d3d4711", "combined": 0.5021850960339815, "overlap": 0.8369751600566359, "semantic": 0.0}, {"chunk_id": "p_6a42cd47402f", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_7557473886f3", "combined": 0.3593556662112972, "overlap": 0.598926110352162, "semantic": 0.0}, {"chunk_id": "p_de5175661434", "combined": 0.34793466751523683, "overlap": 0.5798911125253947, "semantic": 0.0}, {"chunk_id": "p_1be9b0de271b", "combined": 0.3230929406834168, "overlap": 0.0, "semantic": 0.807732351708542}, {"chunk_id": "p_306b3028214e", "combined": 0.32275002263182156, "overlap": 0.5379167043863693, "semantic": 0.0}, {"chunk_id": "p_b67c0b7e16c2", "combined": 0.3063027399706895, "overlap": 0.5105045666178158, "semantic": 0.0}]}
{"symbol_id": "511776b5a39bb1261d6b0363e3c68759ae9e4039", "symbol_name": "determineStartNode", "query_text_overlap": "int startnode diff endcount startcount outdegree determinestartnode indegree abs getnumnodes graph math else private break", "query_text_semantic": "private int determineStartNode(int[] inDegree, int[] outDegree) { int n = graph.getNumNodes(); int startNode = -1; int startCount = 0; int endCount = 0; for (int i = 0; i < n; i++) { int diff = outDegree[i] - inDegree[i]; if (diff == 1) { startNode = i; startCount++; } else if (diff == -1) { endCount++; } else if (Math.abs(diff) > 1) { return -1; } } if (!((startCount == 1 && endCount == 1) || (startCount == 0 && endCount == 0))) { return -1; } if (startNode == -1) { for (int i = 0; i < n; i++) { if (outDegree[i] > 0) { startNode = i; break; } } } return startNode; }", "best": {"chunk_id": "p_89a8bd51d317", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_306b3028214e", "score": 0.4865692467040993, "overlap_score": 0.8109487445068322, "semantic_score": 0.0}, {"chunk_id": "p_0322ed83358b", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_89a8bd51d317", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_306b3028214e", "combined": 0.4865692467040993, "overlap": 0.8109487445068322, "semantic": 0.0}, {"chunk_id": "p_0322ed83358b", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_63bc8bb60486", "combined": 0.33988731356201946, "overlap": 0.0, "semantic": 0.8497182839050486}, {"chunk_id": "p_b43208b407f5", "combined": 0.3311847090919131, "overlap": 0.0, "semantic": 0.8279617727297828}, {"chunk_id": "p_49a475956d84", "combined": 0.29465844444072176, "overlap": 0.0, "semantic": 0.7366461111018043}, {"chunk_id": "p_ed49dd17aa2d", "combined": 0.2936033539137163, "overlap": 0.0, "semantic": 0.7340083847842906}, {"chunk_id": "p_2fff3a9c3c27", "combined": 0.2905699903643851, "overlap": 0.0, "semantic": 0.7264249759109627}, {"chunk_id": "p_8ef457a89649", "combined": 0.26933041472853064, "overlap": 0.0, "semantic": 0.6733260368213266}, {"chunk_id": "p_549352ad713c", "combined": 0.26933041472853064, "overlap": 0.0, "semantic": 0.6733260368213266}]}
{"symbol_id": "f1b1ab51e17f0042154359db69445c42b61acedc", "symbol_name": "computeDegrees", "query_text_overlap": "int edgecount computedegrees graph indegree outdegree getedges getnumnodes private", "query_text_semantic": "private int computeDegrees(int[] inDegree, int[] outDegree) { int edgeCount = 0; for (int u = 0; u < graph.getNumNodes(); u++) { for (int v : graph.getEdges(u)) { outDegree[u]++; inDegree[v]++; edgeCount++; } } return edgeCount; }", "best": {"chunk_id": "p_0322ed83358b", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, "alternatives": [{"chunk_id": "p_3e0a53e55a51", "score": 0.35045406594850115, "overlap_score": 0.0, "semantic_score": 0.8761351648712528}, {"chunk_id": "p_d309f18fcabf", "score": 0.34834080811646284, "overlap_score": 0.0, "semantic_score": 0.870852020291157}], "topk_raw": [{"chunk_id": "p_0322ed83358b", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_3e0a53e55a51", "combined": 0.35045406594850115, "overlap": 0.0, "semantic": 0.8761351648712528}, {"chunk_id": "p_d309f18fcabf", "combined": 0.34834080811646284, "overlap": 0.0, "semantic": 0.870852020291157}, {"chunk_id": "p_49a475956d84", "combined": 0.30355909527757463, "overlap": 0.0, "semantic": 0.7588977381939365}, {"chunk_id": "p_b43208b407f5", "combined": 0.2955454415153674, "overlap": 0.0, "semantic": 0.7388636037884184}, {"chunk_id": "p_fd078e09192a", "combined": 0.2918163527757074, "overlap": 0.0, "semantic": 0.7295408819392685}, {"chunk_id": "p_c344c50c3a14", "combined": 0.29108703569235356, "overlap": 0.0, "semantic": 0.7277175892308838}, {"chunk_id": "p_bd75b6a622ed", "combined": 0.27603663203870077, "overlap": 0.0, "semantic": 0.6900915800967519}, {"chunk_id": "p_14fe65927d9e", "combined": 0.255137403433247, "overlap": 0.0, "semantic": 0.6378435085831174}, {"chunk_id": "p_ba71050229e0", "combined": 0.2549657135573995, "overlap": 0.0, "semantic": 0.6374142838934987}]}
{"symbol_id": "efff70d115e7c26fbdf93ee8efe80c5f11ba843d", "symbol_name": "findEulerianPath", "query_text_overlap": "path int indegree outdegree new arraylist list startnode edgecount findeulerianpath graph integer allnonzerodegreeverticesweaklyconnected buildhierholzerpath collections computedegrees determinestartnode getnumnodes rotateeuleriancircuitifneeded singletonlist", "query_text_semantic": "Finds an Eulerian Path or Circuit using Hierholzer’s Algorithm.\n\n@return list of vertices representing the Eulerian Path/Circuit,\n        or an empty list if none exists\n/", "best": {"chunk_id": "p_d553c50ad036", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_5b014b6eccd1", "score": 0.5224730143958001, "overlap_score": 0.8707883573263335, "semantic_score": 0.0}, {"chunk_id": "p_0322ed83358b", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_d553c50ad036", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.5224730143958001, "overlap": 0.8707883573263335, "semantic": 0.0}, {"chunk_id": "p_0322ed83358b", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_63bc8bb60486", "combined": 0.3702509859809096, "overlap": 0.0, "semantic": 0.925627464952274}, {"chunk_id": "p_5fa9be1911ff", "combined": 0.3486006514321782, "overlap": 0.0, "semantic": 0.8715016285804456}, {"chunk_id": "p_de5175661434", "combined": 0.34793466751523683, "overlap": 0.5798911125253947, "semantic": 0.0}, {"chunk_id": "p_6271020b607b", "combined": 0.34535512184084177, "overlap": 0.0, "semantic": 0.8633878046021044}, {"chunk_id": "p_fd078e09192a", "combined": 0.33666181698368247, "overlap": 0.0, "semantic": 0.8416545424592061}, {"chunk_id": "p_dfdadae1e18c", "combined": 0.3350709886406266, "overlap": 0.0, "semantic": 0.8376774716015665}, {"chunk_id": "p_7557473886f3", "combined": 0.3341232163520989, "overlap": 0.0, "semantic": 0.8353080408802472}]}
{"symbol_id": "9b8bfff7397a399e6982102a56b8ca0fdf1ab6ac", "symbol_name": "HierholzerEulerianPath", "query_text_overlap": "graph hierholzereulerianpath creates hierholzer solver given param directed public", "query_text_semantic": "Creates a Hierholzer solver for the given graph.\n\n@param graph directed graph\n/", "best": {"chunk_id": "p_bf24ebf30f09", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_841f6201bb1f", "score": 0.5954498159525946, "overlap_score": 0.9924163599209911, "semantic_score": 0.0}, {"chunk_id": "p_ab2e640961d6", "score": 0.5457816745724766, "overlap_score": 0.909636124287461, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_bf24ebf30f09", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_841f6201bb1f", "combined": 0.5954498159525946, "overlap": 0.9924163599209911, "semantic": 0.0}, {"chunk_id": "p_ab2e640961d6", "combined": 0.5457816745724766, "overlap": 0.909636124287461, "semantic": 0.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_168ccbaad0ba", "combined": 0.39090204650204474, "overlap": 0.6515034108367412, "semantic": 0.0}, {"chunk_id": "p_63bc8bb60486", "combined": 0.37499459844094307, "overlap": 0.0, "semantic": 0.9374864961023577}, {"chunk_id": "p_6a42cd47402f", "combined": 0.36843846891530563, "overlap": 0.0, "semantic": 0.921096172288264}, {"chunk_id": "p_0322ed83358b", "combined": 0.3347445999745087, "overlap": 0.0, "semantic": 0.8368614999362718}, {"chunk_id": "p_14fe65927d9e", "combined": 0.32280098611680047, "overlap": 0.0, "semantic": 0.8070024652920011}, {"chunk_id": "p_7554a8bf000d", "combined": 0.3206598938144141, "overlap": 0.5344331563573569, "semantic": 0.0}]}
{"symbol_id": "4093109c8f1d7d364f6d389f9659ad4c6eedf863", "symbol_name": "Graph", "query_text_overlap": "adjacencylist graph list int vertex public vertices node numnodes number param add arraylist get integer addedge getedges getnumnodes size directed", "query_text_semantic": "Simple directed graph represented by adjacency lists.\n/", "best": {"chunk_id": "p_7557473886f3", "score": 0.6014357506603818, "overlap_score": 0.5363067165867221, "semantic_score": 0.6991293017708712}, "alternatives": [{"chunk_id": "p_d6c63fb60550", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, {"chunk_id": "p_84aa4d0220d5", "score": 0.49290091330607655, "overlap_score": 0.8215015221767943, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_7557473886f3", "combined": 0.6014357506603818, "overlap": 0.5363067165867221, "semantic": 0.6991293017708712}, {"chunk_id": "p_d6c63fb60550", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_84aa4d0220d5", "combined": 0.49290091330607655, "overlap": 0.8215015221767943, "semantic": 0.0}, {"chunk_id": "p_066d4d3d4711", "combined": 0.44968024488765745, "overlap": 0.7494670748127624, "semantic": 0.0}, {"chunk_id": "p_13436cbd731c", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_86702f9909a0", "combined": 0.34117036743632634, "overlap": 0.0, "semantic": 0.8529259185908158}, {"chunk_id": "p_8493448f361a", "combined": 0.3184297160019435, "overlap": 0.5307161933365725, "semantic": 0.0}, {"chunk_id": "p_67f9ec055567", "combined": 0.2977135470081894, "overlap": 0.0, "semantic": 0.7442838675204735}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.27441690678821046, "overlap": 0.0, "semantic": 0.6860422669705262}, {"chunk_id": "p_f8cf778251a1", "combined": 0.2694411730886589, "overlap": 0.0, "semantic": 0.6736029327216472}]}
{"symbol_id": "19996d5f777c39bca33d1323efc8c3e27ebcb57c", "symbol_name": "getNumNodes", "query_text_overlap": "getnumnodes adjacencylist size number vertices returns graph public int", "query_text_semantic": "Returns the number of vertices in the graph.\n\n@return number of vertices\n/", "best": {"chunk_id": "p_d6c63fb60550", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_8a0b714ca1a9", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, {"chunk_id": "p_f263b09897fb", "score": 0.3616064397155858, "overlap_score": 0.0, "semantic_score": 0.9040160992889644}], "topk_raw": [{"chunk_id": "p_d6c63fb60550", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_8a0b714ca1a9", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_f263b09897fb", "combined": 0.3616064397155858, "overlap": 0.0, "semantic": 0.9040160992889644}, {"chunk_id": "p_75f37652d331", "combined": 0.36136182912794546, "overlap": 0.0, "semantic": 0.9034045728198636}, {"chunk_id": "p_13436cbd731c", "combined": 0.3478141186422672, "overlap": 0.0, "semantic": 0.8695352966056679}, {"chunk_id": "p_3d12e9f7b9ac", "combined": 0.34427023920358374, "overlap": 0.0, "semantic": 0.8606755980089593}, {"chunk_id": "p_a3ba3397e685", "combined": 0.34350819965166446, "overlap": 0.0, "semantic": 0.8587704991291611}, {"chunk_id": "p_7cde073befc2", "combined": 0.34345690440058374, "overlap": 0.0, "semantic": 0.8586422610014592}, {"chunk_id": "p_8493448f361a", "combined": 0.3184297160019435, "overlap": 0.5307161933365725, "semantic": 0.0}, {"chunk_id": "p_d309f18fcabf", "combined": 0.3180510993295898, "overlap": 0.0, "semantic": 0.7951277483239745}]}
{"symbol_id": "abf6a19257e432400385ee49e92b26ad1b3d9740", "symbol_name": "getEdges", "query_text_overlap": "list node getedges adjacencylist get integer vertex returns outgoing edges given param index destination vertices public int", "query_text_semantic": "Returns a list of outgoing edges from the given vertex.\n\n@param node vertex index\n@return list of destination vertices\n/", "best": {"chunk_id": "p_84aa4d0220d5", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_bf24ebf30f09", "score": 0.46909430624267806, "overlap_score": 0.7818238437377968, "semantic_score": 0.0}, {"chunk_id": "p_841f6201bb1f", "score": 0.4655368638610212, "overlap_score": 0.7758947731017021, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_84aa4d0220d5", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_bf24ebf30f09", "combined": 0.46909430624267806, "overlap": 0.7818238437377968, "semantic": 0.0}, {"chunk_id": "p_841f6201bb1f", "combined": 0.4655368638610212, "overlap": 0.7758947731017021, "semantic": 0.0}, {"chunk_id": "p_ab2e640961d6", "combined": 0.42670512665590493, "overlap": 0.7111752110931749, "semantic": 0.0}, {"chunk_id": "p_2789c080bebf", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_1be9b0de271b", "combined": 0.38840254388607764, "overlap": 0.0, "semantic": 0.9710063597151941}, {"chunk_id": "p_55f82ed410bc", "combined": 0.378284154979702, "overlap": 0.0, "semantic": 0.9457103874492551}, {"chunk_id": "p_e09add454892", "combined": 0.37492405037162246, "overlap": 0.0, "semantic": 0.937310125929056}, {"chunk_id": "p_75f37652d331", "combined": 0.36081890089858265, "overlap": 0.0, "semantic": 0.9020472522464565}, {"chunk_id": "p_8a0b714ca1a9", "combined": 0.3545436995525215, "overlap": 0.0, "semantic": 0.8863592488813038}]}
{"symbol_id": "ad56ee5b59206828dc2641b5919ef741a27ce6b2", "symbol_name": "addEdge", "query_text_overlap": "vertex addedge add adjacencylist get code param int adds directed edge source destination public void", "query_text_semantic": "Adds a directed edge from vertex {@code from} to vertex {@code to}.\n\n@param from source vertex\n@param to   destination vertex\n/", "best": {"chunk_id": "p_7557473886f3", "score": 0.6655650858603577, "overlap_score": 0.5624657669024851, "semantic_score": 0.8202140642971664}, "alternatives": [{"chunk_id": "p_34ad3b3af1d4", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, {"chunk_id": "p_b852ce2579bc", "score": 0.5766679494804603, "overlap_score": 0.9611132491341005, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_7557473886f3", "combined": 0.6655650858603577, "overlap": 0.5624657669024851, "semantic": 0.8202140642971664}, {"chunk_id": "p_34ad3b3af1d4", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_b852ce2579bc", "combined": 0.5766679494804603, "overlap": 0.9611132491341005, "semantic": 0.0}, {"chunk_id": "p_89b4f1f2ccff", "combined": 0.5255733497014674, "overlap": 0.8759555828357791, "semantic": 0.0}, {"chunk_id": "p_84aa4d0220d5", "combined": 0.5169427897045688, "overlap": 0.8615713161742813, "semantic": 0.0}, {"chunk_id": "p_066d4d3d4711", "combined": 0.4716139775600482, "overlap": 0.7860232959334137, "semantic": 0.0}, {"chunk_id": "p_ab2e640961d6", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_8721154d2c1a", "combined": 0.36793092781708553, "overlap": 0.0, "semantic": 0.9198273195427138}, {"chunk_id": "p_c6815d6eb10a", "combined": 0.34538868896169533, "overlap": 0.0, "semantic": 0.8634717224042383}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.34270641817120356, "overlap": 0.0, "semantic": 0.8567660454280088}]}
{"symbol_id": "0b1587dae7f539a4ac739a25306a5ec4c04d3b7e", "symbol_name": "Graph", "query_text_overlap": "graph adjacencylist numnodes arraylist add public list number vertices int new simple directed represented adjacency lists static private final integer", "query_text_semantic": "Simple directed graph represented by adjacency lists.\n/\n    public static class Graph {\n        private final List<List<Integer>> adjacencyList;\n\n        /**\nConstructs a graph with a given number of vertices.\n\n@param numNodes number of vertices\n/", "best": {"chunk_id": "p_d553c50ad036", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_5b014b6eccd1", "score": 0.5224730143958001, "overlap_score": 0.8707883573263335, "semantic_score": 0.0}, {"chunk_id": "p_066d4d3d4711", "score": 0.5021850960339815, "overlap_score": 0.8369751600566359, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_d553c50ad036", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.5224730143958001, "overlap": 0.8707883573263335, "semantic": 0.0}, {"chunk_id": "p_066d4d3d4711", "combined": 0.5021850960339815, "overlap": 0.8369751600566359, "semantic": 0.0}, {"chunk_id": "p_1ef32940dd6f", "combined": 0.4138488069509978, "overlap": 0.6897480115849963, "semantic": 0.0}, {"chunk_id": "p_2e62d911a0d8", "combined": 0.4064526093688512, "overlap": 0.677421015614752, "semantic": 0.0}, {"chunk_id": "p_6a42cd47402f", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_13436cbd731c", "combined": 0.3714526861541292, "overlap": 0.0, "semantic": 0.928631715385323}, {"chunk_id": "p_7557473886f3", "combined": 0.3593556662112972, "overlap": 0.598926110352162, "semantic": 0.0}, {"chunk_id": "p_8493448f361a", "combined": 0.3556097011787999, "overlap": 0.5926828352979999, "semantic": 0.0}, {"chunk_id": "p_de5175661434", "combined": 0.34793466751523683, "overlap": 0.5798911125253947, "semantic": 0.0}]}
{"symbol_id": "823925b78098981c2995fe3db38f1f8607695ecf", "symbol_name": "BufferGeometry", "query_text_overlap": "type buffergeometry attribute name geometry each index uuid used readonly _id bufferattribute constructor defineproperty eventdispatcher generateuuid indices indirect isbuffergeometry object", "query_text_semantic": "class BufferGeometry extends EventDispatcher { /** * Constructs a new geometry. */ constructor() { super(); /** * This flag can be used for type testing. * * @type {boolean} * @readonly * @default true */ this.isBufferGeometry = true; /** * The ID of the geometry. * * @name BufferGeometry#id * @type {number} * @readonly */ Object.defineProperty( this, 'id', { value: _id ++ } ); /** * The UUID of the geometry. * * @type {string} * @readonly */ this.uuid = generateUUID(); /** * The name of the geometry. * * @type {string} */ this.name = ''; this.type = 'BufferGeometry'; /** * Allows for vertices to be re-used across multiple triangles; this is * called using \"indexed triangles\". Each triangle is", "best": {"chunk_id": "p_14fe65927d9e", "score": 0.895107204977724, "overlap_score": 0.9097918632965293, "semantic_score": 0.8730802174995159}, "alternatives": [{"chunk_id": "p_1be9b0de271b", "score": 0.6726413517620413, "overlap_score": 0.494895163135223, "semantic_score": 0.9392606347022687}, {"chunk_id": "p_7dc1750f2080", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_14fe65927d9e", "combined": 0.895107204977724, "overlap": 0.9097918632965293, "semantic": 0.8730802174995159}, {"chunk_id": "p_1be9b0de271b", "combined": 0.6726413517620413, "overlap": 0.494895163135223, "semantic": 0.9392606347022687}, {"chunk_id": "p_7dc1750f2080", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_ed80d03c45ad", "combined": 0.5048210327413258, "overlap": 0.8413683879022098, "semantic": 0.0}, {"chunk_id": "p_c29e03ef0aad", "combined": 0.4719351251366136, "overlap": 0.786558541894356, "semantic": 0.0}, {"chunk_id": "p_97858363d151", "combined": 0.4044532152082435, "overlap": 0.6740886920137392, "semantic": 0.0}, {"chunk_id": "p_066d4d3d4711", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_f263b09897fb", "combined": 0.37464113930033605, "overlap": 0.6244018988338934, "semantic": 0.0}, {"chunk_id": "p_c344c50c3a14", "combined": 0.3735993033552758, "overlap": 0.0, "semantic": 0.9339982583881894}, {"chunk_id": "p_89a8bd51d317", "combined": 0.3644772016361172, "overlap": 0.0, "semantic": 0.9111930040902929}]}
{"symbol_id": "6e406b1b48d9cafb1377d6f963c68a2aa49abf24", "symbol_name": "dispose", "query_text_overlap": "dispose dispatchevent type instance frees gpu related resources allocated call method whenever longer used your app fires buffergeometry", "query_text_semantic": "Frees the GPU-related resources allocated by this instance. Call this\nmethod whenever this instance is no longer used in your app.\n\n@fires BufferGeometry#dispose\n/", "best": {"chunk_id": "p_7dc1750f2080", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_14fe65927d9e", "score": 0.5458751179779175, "overlap_score": 0.9097918632965293, "semantic_score": 0.0}, {"chunk_id": "p_c29e03ef0aad", "score": 0.4719351251366136, "overlap_score": 0.786558541894356, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_7dc1750f2080", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_14fe65927d9e", "combined": 0.5458751179779175, "overlap": 0.9097918632965293, "semantic": 0.0}, {"chunk_id": "p_c29e03ef0aad", "combined": 0.4719351251366136, "overlap": 0.786558541894356, "semantic": 0.0}, {"chunk_id": "p_879f782bc115", "combined": 0.44509341324472773, "overlap": 0.7418223554078796, "semantic": 0.0}, {"chunk_id": "p_8112e67cd94b", "combined": 0.41469874633644865, "overlap": 0.6911645772274144, "semantic": 0.0}, {"chunk_id": "p_9749cf7762b3", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_f263b09897fb", "combined": 0.37464113930033605, "overlap": 0.6244018988338934, "semantic": 0.0}, {"chunk_id": "p_ae0463f11b6a", "combined": 0.3685571612202137, "overlap": 0.6142619353670229, "semantic": 0.0}, {"chunk_id": "p_6c8fad0a7bf9", "combined": 0.3381273136237111, "overlap": 0.5635455227061852, "semantic": 0.0}, {"chunk_id": "p_c124c1f96fd4", "combined": 0.33540650835537844, "overlap": 0.0, "semantic": 0.838516270888446}]}
{"symbol_id": "dfc73960dda0c45684d5bd3e20db6a323a3dbd5d", "symbol_name": "copy", "query_text_overlap": "const name source attributes boundingbox groups index morphattributes array clone data group morphattribute copy attribute length morphtargetsrelative addgroup boundingsphere count", "query_text_semantic": "Copies the values of the given geometry to this instance.\n\n@param {BufferGeometry} source - The geometry to copy.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_34ad3b3af1d4", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_b852ce2579bc", "score": 0.5766679494804603, "overlap_score": 0.9611132491341005, "semantic_score": 0.0}, {"chunk_id": "p_79b04219cf77", "score": 0.5575343954285003, "overlap_score": 0.9292239923808339, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_34ad3b3af1d4", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_b852ce2579bc", "combined": 0.5766679494804603, "overlap": 0.9611132491341005, "semantic": 0.0}, {"chunk_id": "p_79b04219cf77", "combined": 0.5575343954285003, "overlap": 0.9292239923808339, "semantic": 0.0}, {"chunk_id": "p_89b4f1f2ccff", "combined": 0.5255733497014674, "overlap": 0.8759555828357791, "semantic": 0.0}, {"chunk_id": "p_d6c63fb60550", "combined": 0.4669948962591553, "overlap": 0.7783248270985922, "semantic": 0.0}, {"chunk_id": "p_6764289baa70", "combined": 0.46045607154367574, "overlap": 0.7674267859061262, "semantic": 0.0}, {"chunk_id": "p_10c9c1f312c3", "combined": 0.44645814852685245, "overlap": 0.7440969142114208, "semantic": 0.0}, {"chunk_id": "p_efae9e409c4f", "combined": 0.43629016633571344, "overlap": 0.7271502772261891, "semantic": 0.0}, {"chunk_id": "p_aeea4bf88ec9", "combined": 0.4302660301694461, "overlap": 0.7171100502824101, "semantic": 0.0}, {"chunk_id": "p_13436cbd731c", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}]}
{"symbol_id": "8670e70b93cb833b04757667fd3b4477a3ecbbf9", "symbol_name": "clone", "query_text_overlap": "clone constructor copy new instance returns geometry copied values buffergeometry", "query_text_semantic": "Returns a new geometry with copied values from this instance.\n\n@return {BufferGeometry} A clone of this instance.\n/", "best": {"chunk_id": "p_d553c50ad036", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_5b014b6eccd1", "score": 0.5224730143958001, "overlap_score": 0.8707883573263335, "semantic_score": 0.0}, {"chunk_id": "p_9aed705acacf", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_d553c50ad036", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.5224730143958001, "overlap": 0.8707883573263335, "semantic": 0.0}, {"chunk_id": "p_9aed705acacf", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_00bbfdedc430", "combined": 0.39008222494894795, "overlap": 0.0, "semantic": 0.9752055623723699}, {"chunk_id": "p_de5175661434", "combined": 0.34793466751523683, "overlap": 0.5798911125253947, "semantic": 0.0}, {"chunk_id": "p_89a8bd51d317", "combined": 0.32626332299838223, "overlap": 0.0, "semantic": 0.8156583074959555}, {"chunk_id": "p_306b3028214e", "combined": 0.32275002263182156, "overlap": 0.5379167043863693, "semantic": 0.0}, {"chunk_id": "p_b67c0b7e16c2", "combined": 0.3063027399706895, "overlap": 0.5105045666178158, "semantic": 0.0}, {"chunk_id": "p_87aea40f379d", "combined": 0.2583841862746923, "overlap": 0.0, "semantic": 0.6459604656867307}, {"chunk_id": "p_f9f52aecd436", "combined": 0.25546254624267906, "overlap": 0.0, "semantic": 0.6386563656066976}]}
{"symbol_id": "dd0c5a76397cee718e71d80b63d1f51b65119d91", "symbol_name": "toJSON", "query_text_overlap": "data const key attributes index parameters array name tojson type attribute attributearray morphattributes object userdata json length uuid buffergeometry call", "query_text_semantic": "Serializes the geometry into JSON.\n\n@return {Object} A JSON object representing the serialized geometry.\n/", "best": {"chunk_id": "p_ed80d03c45ad", "score": 0.962246150312116, "overlap_score": 1.0, "semantic_score": 0.9056153757802899}, "alternatives": [{"chunk_id": "p_7dc1750f2080", "score": 0.8686101617493978, "overlap_score": 0.7810169362489963, "semantic_score": 1.0}, {"chunk_id": "p_c29e03ef0aad", "score": 0.5609137827406293, "overlap_score": 0.9348563045677155, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_ed80d03c45ad", "combined": 0.962246150312116, "overlap": 1.0, "semantic": 0.9056153757802899}, {"chunk_id": "p_7dc1750f2080", "combined": 0.8686101617493978, "overlap": 0.7810169362489963, "semantic": 1.0}, {"chunk_id": "p_c29e03ef0aad", "combined": 0.5609137827406293, "overlap": 0.9348563045677155, "semantic": 0.0}, {"chunk_id": "p_86702f9909a0", "combined": 0.5141867752581064, "overlap": 0.8569779587635108, "semantic": 0.0}, {"chunk_id": "p_79b04219cf77", "combined": 0.4781332499899944, "overlap": 0.796888749983324, "semantic": 0.0}, {"chunk_id": "p_f263b09897fb", "combined": 0.445275986936509, "overlap": 0.7421266448941817, "semantic": 0.0}, {"chunk_id": "p_14fe65927d9e", "combined": 0.4307797529613649, "overlap": 0.7179662549356082, "semantic": 0.0}, {"chunk_id": "p_6c8fad0a7bf9", "combined": 0.4018778438619099, "overlap": 0.6697964064365165, "semantic": 0.0}, {"chunk_id": "p_d6c63fb60550", "combined": 0.4004879148406997, "overlap": 0.6674798580678328, "semantic": 0.0}, {"chunk_id": "p_6764289baa70", "combined": 0.3948803154926374, "overlap": 0.6581338591543957, "semantic": 0.0}]}
{"symbol_id": "0ee09f63df630541daab1ddbf673e733b2b425ec", "symbol_name": "toNonIndexed", "query_text_overlap": "const attribute index indices array attributes itemsize name buffergeometry morphattributes indexed array2 normalized tononindexed new non convertbufferattribute geometry2 index2 length", "query_text_semantic": "Return a new non-index version of this indexed geometry. If the geometry\nis already non-indexed, the method is a NOOP.\n\n@return {BufferGeometry} The non-indexed version of this indexed geometry.\n/", "best": {"chunk_id": "p_656c786ca087", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_d553c50ad036", "score": 0.46425159799120364, "overlap_score": 0.7737526633186728, "semantic_score": 0.0}, {"chunk_id": "p_5b014b6eccd1", "score": 0.40426488640088554, "overlap_score": 0.6737748106681426, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_656c786ca087", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_d553c50ad036", "combined": 0.46425159799120364, "overlap": 0.7737526633186728, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.40426488640088554, "overlap": 0.6737748106681426, "semantic": 0.0}, {"chunk_id": "p_0322ed83358b", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_fb50dcaa4262", "combined": 0.3427211389120717, "overlap": 0.0, "semantic": 0.8568028472801791}, {"chunk_id": "p_b169d82f8843", "combined": 0.3348084020503517, "overlap": 0.0, "semantic": 0.8370210051258793}, {"chunk_id": "p_405b1492c084", "combined": 0.3341972146733768, "overlap": 0.0, "semantic": 0.835493036683442}, {"chunk_id": "p_c7548d500b72", "combined": 0.31546559293260623, "overlap": 0.0, "semantic": 0.7886639823315156}, {"chunk_id": "p_b43208b407f5", "combined": 0.309185320308256, "overlap": 0.0, "semantic": 0.77296330077064}, {"chunk_id": "p_3e0a53e55a51", "combined": 0.3026451297926996, "overlap": 0.0, "semantic": 0.7566128244817489}]}
{"symbol_id": "a5d1d38124c0439f49d7394c69b8b62d8b6572ad", "symbol_name": "convertBufferAttribute", "query_text_overlap": "attribute itemsize indices array index array2 normalized const convertbufferattribute index2 length let bufferattribute constructor data isinterleavedbufferattribute offset stride new function", "query_text_semantic": "function convertBufferAttribute( attribute, indices ) { const array = attribute.array; const itemSize = attribute.itemSize; const normalized = attribute.normalized; const array2 = new array.constructor( indices.length * itemSize ); let index = 0, index2 = 0; for ( let i = 0, l = indices.length; i < l; i ++ ) { if ( attribute.isInterleavedBufferAttribute ) { index = indices[ i ] * attribute.data.stride + attribute.offset; } else { index = indices[ i ] * itemSize; } for ( let j = 0; j < itemSize; j ++ ) { array2[ index2 ++ ] = array[ index ++ ]; } } return new BufferAttribute( array2, itemSize, normalized ); }", "best": {"chunk_id": "p_d6c63fb60550", "score": 0.7224784829264921, "overlap_score": 0.6412689205700334, "semantic_score": 0.84429282646118}, "alternatives": [{"chunk_id": "p_656c786ca087", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, {"chunk_id": "p_ed80d03c45ad", "score": 0.5182638648209412, "overlap_score": 0.863773108034902, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_d6c63fb60550", "combined": 0.7224784829264921, "overlap": 0.6412689205700334, "semantic": 0.84429282646118}, {"chunk_id": "p_656c786ca087", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_ed80d03c45ad", "combined": 0.5182638648209412, "overlap": 0.863773108034902, "semantic": 0.0}, {"chunk_id": "p_d553c50ad036", "combined": 0.46425159799120364, "overlap": 0.7737526633186728, "semantic": 0.0}, {"chunk_id": "p_79b04219cf77", "combined": 0.4593576711022884, "overlap": 0.765596118503814, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.40426488640088554, "overlap": 0.6737748106681426, "semantic": 0.0}, {"chunk_id": "p_4b5cd35ef3c3", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_f8f9f7509cdb", "combined": 0.39944471554162336, "overlap": 0.0, "semantic": 0.9986117888540583}, {"chunk_id": "p_8493448f361a", "combined": 0.3861152750755247, "overlap": 0.0, "semantic": 0.9652881876888116}, {"chunk_id": "p_6764289baa70", "combined": 0.3793739550483692, "overlap": 0.6322899250806153, "semantic": 0.0}]}
{"symbol_id": "8f38bdf00eab91ba7eef0b9df3e5b07b88deb964", "symbol_name": "normalizeNormals", "query_text_overlap": "_vector normals normal normalizenormals attributes count frombufferattribute normalize setxyz geometry will ensures every vector have magnitude correct lighting surfaces const", "query_text_semantic": "Ensures every normal vector in a geometry will have a magnitude of `1`. This will\ncorrect lighting on the geometry surfaces.\n/", "best": {"chunk_id": "p_12a5fb679e5a", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_fa25037fd0dc", "score": 0.5675171631192709, "overlap_score": 0.9458619385321182, "semantic_score": 0.0}, {"chunk_id": "p_e115e89e2b35", "score": 0.5294175894728894, "overlap_score": 0.8823626491214824, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_12a5fb679e5a", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_fa25037fd0dc", "combined": 0.5675171631192709, "overlap": 0.9458619385321182, "semantic": 0.0}, {"chunk_id": "p_e115e89e2b35", "combined": 0.5294175894728894, "overlap": 0.8823626491214824, "semantic": 0.0}, {"chunk_id": "p_cee66e3c539d", "combined": 0.49983570379926684, "overlap": 0.8330595063321115, "semantic": 0.0}, {"chunk_id": "p_d85f95403d5f", "combined": 0.46131983008771815, "overlap": 0.7688663834795303, "semantic": 0.0}, {"chunk_id": "p_656c786ca087", "combined": 0.43817676321572474, "overlap": 0.7302946053595413, "semantic": 0.0}, {"chunk_id": "p_999485eac43b", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_e1e2829e1221", "combined": 0.3890784190179144, "overlap": 0.648464031696524, "semantic": 0.0}, {"chunk_id": "p_40aa5ed49d3a", "combined": 0.3857342216700279, "overlap": 0.0, "semantic": 0.9643355541750698}, {"chunk_id": "p_5f1ad173d443", "combined": 0.37176548476652754, "overlap": 0.619609141277546, "semantic": 0.0}]}
{"symbol_id": "ec8420d3d267814b8c43f4550b729feb2a03aeba", "symbol_name": "computeVertexNormals", "query_text_overlap": "normalattribute new vector3 index const frombufferattribute positionattribute vertex normal count getx computevertexnormals getattribute subvectors normals indexed let bufferattribute cross float32array", "query_text_semantic": "Computes vertex normals for the given vertex data. For indexed geometries, the method sets\neach vertex normal to be the average of the face normals of the faces that share that vertex.\nFor non-indexed geometries, vertices are not shared, and the method sets each vertex normal\nto be the same as the face normal.\n/", "best": {"chunk_id": "p_12a5fb679e5a", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_841e73b55424", "score": 0.5437806943439545, "overlap_score": 0.9063011572399242, "semantic_score": 0.0}, {"chunk_id": "p_d553c50ad036", "score": 0.4784833062822248, "overlap_score": 0.7974721771370413, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_12a5fb679e5a", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_841e73b55424", "combined": 0.5437806943439545, "overlap": 0.9063011572399242, "semantic": 0.0}, {"chunk_id": "p_d553c50ad036", "combined": 0.4784833062822248, "overlap": 0.7974721771370413, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.4166576922855714, "overlap": 0.6944294871426191, "semantic": 0.0}, {"chunk_id": "p_ba71050229e0", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_edaec02e7bb7", "combined": 0.2961364239363184, "overlap": 0.0, "semantic": 0.740341059840796}, {"chunk_id": "p_40aa5ed49d3a", "combined": 0.2950076362544097, "overlap": 0.0, "semantic": 0.7375190906360242}, {"chunk_id": "p_13436cbd731c", "combined": 0.29311087164504923, "overlap": 0.0, "semantic": 0.7327771791126231}, {"chunk_id": "p_999485eac43b", "combined": 0.2926138956259704, "overlap": 0.0, "semantic": 0.7315347390649259}, {"chunk_id": "p_e62073c6c344", "combined": 0.29025176371186634, "overlap": 0.0, "semantic": 0.7256294092796658}]}
{"symbol_id": "037f1eddd9cf32e25153927fa420ee4750019173", "symbol_name": "computeTangents", "query_text_overlap": "new attributes vector3 const frombufferattribute positionattribute normal tangent index position sub uvattribute computetangents uva uvb uvc vector2 count tan1 tan2", "query_text_semantic": "Calculates and adds a tangent attribute to this geometry.\n\nThe computation is only supported for indexed geometries and if position, normal, and uv attributes\nare defined. When using a tangent space normal map, prefer the MikkTSpace algorithm provided by\n{@link BufferGeometryUtils#computeMikkTSpaceTangents} instead.\n/", "best": {"chunk_id": "p_12a5fb679e5a", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_d553c50ad036", "score": 0.4784833062822248, "overlap_score": 0.7974721771370413, "semantic_score": 0.0}, {"chunk_id": "p_5b014b6eccd1", "score": 0.4166576922855714, "overlap_score": 0.6944294871426191, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_12a5fb679e5a", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_d553c50ad036", "combined": 0.4784833062822248, "overlap": 0.7974721771370413, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.4166576922855714, "overlap": 0.6944294871426191, "semantic": 0.0}, {"chunk_id": "p_40aa5ed49d3a", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_67f9ec055567", "combined": 0.3090917173944706, "overlap": 0.0, "semantic": 0.7727292934861765}, {"chunk_id": "p_8cb6b912bcc6", "combined": 0.30291528660288425, "overlap": 0.0, "semantic": 0.7572882165072106}, {"chunk_id": "p_7cde073befc2", "combined": 0.29662784330617215, "overlap": 0.0, "semantic": 0.7415696082654303}, {"chunk_id": "p_de5175661434", "combined": 0.2774682168048285, "overlap": 0.46244702800804754, "semantic": 0.0}, {"chunk_id": "p_ba71050229e0", "combined": 0.2714253165633372, "overlap": 0.0, "semantic": 0.6785632914083429}, {"chunk_id": "p_2af875f043d8", "combined": 0.2679315630521952, "overlap": 0.0, "semantic": 0.6698289076304879}]}
{"symbol_id": "77849ef8df0ee2480bb55faddcc7f5c6069e3633", "symbol_name": "handleVertex", "query_text_overlap": "tmp copy dot handlevertex test tmp2 const crossvectors frombufferattribute multiplyscalar normalattribute normalize setxyzw sub tan1 tan2 tangentattribute function gram schmidt", "query_text_semantic": "function handleVertex( v ) { n.fromBufferAttribute( normalAttribute, v ); n2.copy( n ); const t = tan1[ v ]; // Gram-Schmidt orthogonalize tmp.copy( t ); tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize(); // Calculate handedness tmp2.crossVectors( n2, t ); const test = tmp2.dot( tan2[ v ] ); const w = ( test < 0.0 ) ? - 1.0 : 1.0; tangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w ); }", "best": {"chunk_id": "p_ed80d03c45ad", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_7dc1750f2080", "score": 0.436983098274448, "overlap_score": 0.7283051637907466, "semantic_score": 0.0}, {"chunk_id": "p_5b014b6eccd1", "score": 0.4199737600532969, "overlap_score": 0.6999562667554948, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_ed80d03c45ad", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_7dc1750f2080", "combined": 0.436983098274448, "overlap": 0.7283051637907466, "semantic": 0.0}, {"chunk_id": "p_5b014b6eccd1", "combined": 0.4199737600532969, "overlap": 0.6999562667554948, "semantic": 0.0}, {"chunk_id": "p_2af875f043d8", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_40aa5ed49d3a", "combined": 0.3710373559608723, "overlap": 0.0, "semantic": 0.9275933899021807}, {"chunk_id": "p_0315cd69f0db", "combined": 0.360142052331045, "overlap": 0.0, "semantic": 0.9003551308276125}, {"chunk_id": "p_63bc8bb60486", "combined": 0.3350062128430674, "overlap": 0.0, "semantic": 0.8375155321076685}, {"chunk_id": "p_f48ba918ee12", "combined": 0.31876485449350717, "overlap": 0.0, "semantic": 0.7969121362337679}, {"chunk_id": "p_f8cf778251a1", "combined": 0.2912919215841942, "overlap": 0.0, "semantic": 0.7282298039604855}, {"chunk_id": "p_999485eac43b", "combined": 0.287958007618562, "overlap": 0.0, "semantic": 0.719895019046405}]}
{"symbol_id": "afe83a377d5f9000e8933eea6ac69024516ae0f3", "symbol_name": "handleTriangle", "query_text_overlap": "add frombufferattribute uvb uvc multiplyscalar sdir sub tdir positionattribute tan1 tan2 uva uvattribute addscaledvector copy handletriangle isfinite function const silently", "query_text_semantic": "function handleTriangle( a, b, c ) { vA.fromBufferAttribute( positionAttribute, a ); vB.fromBufferAttribute( positionAttribute, b ); vC.fromBufferAttribute( positionAttribute, c ); uvA.fromBufferAttribute( uvAttribute, a ); uvB.fromBufferAttribute( uvAttribute, b ); uvC.fromBufferAttribute( uvAttribute, c ); vB.sub( vA ); vC.sub( vA ); uvB.sub( uvA ); uvC.sub( uvA ); const r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y ); // silently ignore degenerate uv triangles having coincident or colinear vertices if ( ! isFinite( r ) ) return; sdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r ); tdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r ); tan1[ a ].add( sdir ); tan1[ b ].add( sdir ); tan1[ c ].add( sdir ); tan2[ a ].add( tdir ); tan2[ b", "best": {"chunk_id": "p_ed80d03c45ad", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_066d4d3d4711", "score": 0.4498485214702192, "overlap_score": 0.7497475357836987, "semantic_score": 0.0}, {"chunk_id": "p_7dc1750f2080", "score": 0.436983098274448, "overlap_score": 0.7283051637907466, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_ed80d03c45ad", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_066d4d3d4711", "combined": 0.4498485214702192, "overlap": 0.7497475357836987, "semantic": 0.0}, {"chunk_id": "p_7dc1750f2080", "combined": 0.436983098274448, "overlap": 0.7283051637907466, "semantic": 0.0}, {"chunk_id": "p_40d488fb7200", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_49a475956d84", "combined": 0.386861029708954, "overlap": 0.0, "semantic": 0.9671525742723849}, {"chunk_id": "p_8ef457a89649", "combined": 0.37657381835640164, "overlap": 0.0, "semantic": 0.9414345458910041}, {"chunk_id": "p_549352ad713c", "combined": 0.37657381835640164, "overlap": 0.0, "semantic": 0.9414345458910041}, {"chunk_id": "p_71d17fc83e32", "combined": 0.3499052292268555, "overlap": 0.0, "semantic": 0.8747630730671387}, {"chunk_id": "p_6e246aa6ffa6", "combined": 0.33959507103014613, "overlap": 0.0, "semantic": 0.8489876775753653}, {"chunk_id": "p_7557473886f3", "combined": 0.32190444599765433, "overlap": 0.5365074099960906, "semantic": 0.0}]}
{"symbol_id": "06f3f4bbe4ad6c5a987fb58fc15a2495e61ed675", "symbol_name": "computeBoundingSphere", "query_text_overlap": "position _box boundingsphere _vector sphere _boxmorphtargets center expandbypoint max morphattributesposition bounding attributes computeboundingsphere maxradiussq min const addvectors morphattribute setfrombufferattribute let", "query_text_semantic": "Computes the bounding sphere of the geometry, and updates the `boundingSphere` member.\nThe engine automatically computes the bounding sphere when it is needed, e.g., for ray casting or view frustum culling.\nYou may need to recompute the bounding sphere if the geometry vertices are modified.\n/", "best": {"chunk_id": "p_f8cf778251a1", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_e62073c6c344", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, {"chunk_id": "p_d6c63fb60550", "score": 0.3100536690327208, "overlap_score": 0.5167561150545347, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_f8cf778251a1", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_e62073c6c344", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_d6c63fb60550", "combined": 0.3100536690327208, "overlap": 0.5167561150545347, "semantic": 0.0}, {"chunk_id": "p_c344c50c3a14", "combined": 0.30218624313901177, "overlap": 0.0, "semantic": 0.7554656078475294}, {"chunk_id": "p_0ff93cf0d075", "combined": 0.2942758493615412, "overlap": 0.0, "semantic": 0.735689623403853}, {"chunk_id": "p_0e19e3f32b1e", "combined": 0.2920089583742293, "overlap": 0.0, "semantic": 0.7300223959355733}, {"chunk_id": "p_30a580f05703", "combined": 0.2873784310962688, "overlap": 0.0, "semantic": 0.718446077740672}, {"chunk_id": "p_2af875f043d8", "combined": 0.2842880609471325, "overlap": 0.0, "semantic": 0.7107201523678313}, {"chunk_id": "p_ab2e640961d6", "combined": 0.28223599671949123, "overlap": 0.0, "semantic": 0.7055899917987281}, {"chunk_id": "p_f304dff67a42", "combined": 0.2668373759622846, "overlap": 0.0, "semantic": 0.6670934399057115}]}
{"symbol_id": "31dd0a438ff69f616e60191ea02c1b8e906ede76", "symbol_name": "computeBoundingBox", "query_text_overlap": "boundingbox position min infinity _box _vector computeboundingbox expandbypoint max morphattributesposition isnan bounding box addvectors attributes error morphattribute setfrombufferattribute vector3 computed", "query_text_semantic": "Computes the bounding box of the geometry, and updates the `boundingBox` member.\nThe bounding box is not computed by the engine; it must be computed by your app.\nYou may need to recompute the bounding box if the geometry vertices are modified.\n/", "best": {"chunk_id": "p_ba71050229e0", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_405b1492c084", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, {"chunk_id": "p_e62073c6c344", "score": 0.3999706690576709, "overlap_score": 0.0, "semantic_score": 0.9999266726441772}], "topk_raw": [{"chunk_id": "p_ba71050229e0", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_405b1492c084", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_e62073c6c344", "combined": 0.3999706690576709, "overlap": 0.0, "semantic": 0.9999266726441772}, {"chunk_id": "p_0315cd69f0db", "combined": 0.3706393201610298, "overlap": 0.0, "semantic": 0.9265983004025744}, {"chunk_id": "p_c7548d500b72", "combined": 0.3530954090541134, "overlap": 0.0, "semantic": 0.8827385226352835}, {"chunk_id": "p_8493448f361a", "combined": 0.3491265550300025, "overlap": 0.0, "semantic": 0.8728163875750062}, {"chunk_id": "p_c344c50c3a14", "combined": 0.3480130246808264, "overlap": 0.0, "semantic": 0.8700325617020659}, {"chunk_id": "p_69824f7f33ef", "combined": 0.34411865963401667, "overlap": 0.0, "semantic": 0.8602966490850416}, {"chunk_id": "p_2af875f043d8", "combined": 0.30379375410651344, "overlap": 0.0, "semantic": 0.7594843852662836}, {"chunk_id": "p_fd078e09192a", "combined": 0.303316908489638, "overlap": 0.0, "semantic": 0.7582922712240949}]}
{"symbol_id": "ed1b8d609b8237d7a40e75bc2534411a93507aec", "symbol_name": "setFromPoints", "query_text_overlap": "points point position positionattribute array length data const count setfrompoints float32bufferattribute getattribute math min needsupdate push setattribute setxyz warn geometry", "query_text_semantic": "Defines a geometry by creating a `position` attribute based on the given array of points. The array\ncan hold 2D or 3D vectors. When using two-dimensional data, the `z` coordinate for all vertices is\nset to `0`.\n\nIf the method is used with an existing `position` attribute, the vertex data are overwritten with the\ndata from the array. The length of the array must match the vertex count.\n\n@param {Array<Vector2>|Array<Vector3>} points - The points.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_f8cf778251a1", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_79b04219cf77", "score": 0.5860928285943038, "overlap_score": 0.9768213809905063, "semantic_score": 0.0}, {"chunk_id": "p_d6c63fb60550", "score": 0.49091564920810715, "overlap_score": 0.8181927486801787, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_f8cf778251a1", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_79b04219cf77", "combined": 0.5860928285943038, "overlap": 0.9768213809905063, "semantic": 0.0}, {"chunk_id": "p_d6c63fb60550", "combined": 0.49091564920810715, "overlap": 0.8181927486801787, "semantic": 0.0}, {"chunk_id": "p_6764289baa70", "combined": 0.4840418880471794, "overlap": 0.8067364800786324, "semantic": 0.0}, {"chunk_id": "p_14fe65927d9e", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_13436cbd731c", "combined": 0.3579438849749106, "overlap": 0.0, "semantic": 0.8948597124372765}, {"chunk_id": "p_f48ba918ee12", "combined": 0.343490946036965, "overlap": 0.5724849100616084, "semantic": 0.0}, {"chunk_id": "p_f8f9f7509cdb", "combined": 0.2898627678436303, "overlap": 0.0, "semantic": 0.7246569196090757}, {"chunk_id": "p_ba71050229e0", "combined": 0.2873207002541534, "overlap": 0.0, "semantic": 0.7183017506353835}, {"chunk_id": "p_8cb6b912bcc6", "combined": 0.2837480820320377, "overlap": 0.0, "semantic": 0.7093702050800943}]}
{"symbol_id": "551f004169e976a843b68e3042d340eb76dfdad5", "symbol_name": "center", "query_text_overlap": "_offset center boundingbox computeboundingbox getcenter negate translate geometry based its bounding box buffergeometry reference instance", "query_text_semantic": "Center the geometry based on its bounding box.\n\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_f8cf778251a1", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_14fe65927d9e", "score": 0.5761695880023401, "overlap_score": 0.9602826466705668, "semantic_score": 0.0}, {"chunk_id": "p_efae9e409c4f", "score": 0.4166081347571891, "overlap_score": 0.6943468912619819, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_f8cf778251a1", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_14fe65927d9e", "combined": 0.5761695880023401, "overlap": 0.9602826466705668, "semantic": 0.0}, {"chunk_id": "p_efae9e409c4f", "combined": 0.4166081347571891, "overlap": 0.6943468912619819, "semantic": 0.0}, {"chunk_id": "p_c7548d500b72", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_4ea8c34d23c1", "combined": 0.38907572980043514, "overlap": 0.0, "semantic": 0.9726893245010878}, {"chunk_id": "p_d6c63fb60550", "combined": 0.3100536690327208, "overlap": 0.5167561150545347, "semantic": 0.0}, {"chunk_id": "p_69824f7f33ef", "combined": 0.29782583032818255, "overlap": 0.0, "semantic": 0.7445645758204563}, {"chunk_id": "p_32d0ee873290", "combined": 0.2897884115640242, "overlap": 0.4829806859400403, "semantic": 0.0}, {"chunk_id": "p_3fa1c2469b93", "combined": 0.2826772715312587, "overlap": 0.4711287858854312, "semantic": 0.0}, {"chunk_id": "p_30a580f05703", "combined": 0.27539625782096916, "overlap": 0.45899376303494865, "semantic": 0.0}]}
{"symbol_id": "0f2724e2434651bcb05d306798dfe038a2c1d710", "symbol_name": "lookAt", "query_text_overlap": "lookat _obj vector applymatrix4 matrix updatematrix point time rotates geometry face space typically done one operation not during loop use", "query_text_semantic": "Rotates the geometry to face a point in 3D space. This is typically done as a one time\noperation, and not during a loop. Use {@link Object3D#lookAt} for typical\nreal-time mesh rotation.\n\n@param {Vector3} vector - The target point.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_1134bdea6147", "score": 0.6849153575383347, "overlap_score": 0.6659524845492232, "semantic_score": 0.7133596670220018}, "alternatives": [{"chunk_id": "p_de5175661434", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, {"chunk_id": "p_e09add454892", "score": 0.4614484185430646, "overlap_score": 0.7690806975717744, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_1134bdea6147", "combined": 0.6849153575383347, "overlap": 0.6659524845492232, "semantic": 0.7133596670220018}, {"chunk_id": "p_de5175661434", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_e09add454892", "combined": 0.4614484185430646, "overlap": 0.7690806975717744, "semantic": 0.0}, {"chunk_id": "p_dd56f27f39c7", "combined": 0.4406733545317133, "overlap": 0.7344555908861888, "semantic": 0.0}, {"chunk_id": "p_3448f92f9868", "combined": 0.43593386619979546, "overlap": 0.7265564436663258, "semantic": 0.0}, {"chunk_id": "p_819605397810", "combined": 0.4245855043024247, "overlap": 0.7076425071707079, "semantic": 0.0}, {"chunk_id": "p_89a8bd51d317", "combined": 0.4234385240882254, "overlap": 0.7057308734803757, "semantic": 0.0}, {"chunk_id": "p_dfdadae1e18c", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_2fff3a9c3c27", "combined": 0.3947293102286676, "overlap": 0.657882183714446, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.3925530176606231, "overlap": 0.6542550294343719, "semantic": 0.0}]}
{"symbol_id": "4b207eb7a06694f9956d3afc8e2b7e4cdb7925b6", "symbol_name": "scale", "query_text_overlap": "scale _m1 param number applymatrix4 makescale geometry time scales typically done one operation not during loop use link object3d typical", "query_text_semantic": "Scales the geometry. This is typically done as a one time\noperation, and not during a loop. Use {@link Object3D#scale} for typical\nreal-time mesh rotation.\n\n@param {number} x - The x scale.\n@param {number} y - The y scale.\n@param {number} z - The z scale.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_2e62d911a0d8", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_779699e079a4", "score": 0.4815182263203414, "overlap_score": 0.8025303772005691, "semantic_score": 0.0}, {"chunk_id": "p_6b154ef2a7f7", "score": 0.41951008489371117, "overlap_score": 0.6991834748228519, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_2e62d911a0d8", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_779699e079a4", "combined": 0.4815182263203414, "overlap": 0.8025303772005691, "semantic": 0.0}, {"chunk_id": "p_6b154ef2a7f7", "combined": 0.41951008489371117, "overlap": 0.6991834748228519, "semantic": 0.0}, {"chunk_id": "p_13436cbd731c", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_69824f7f33ef", "combined": 0.3945966625416509, "overlap": 0.0, "semantic": 0.9864916563541272}, {"chunk_id": "p_e09add454892", "combined": 0.38919327953332256, "overlap": 0.6486554658888709, "semantic": 0.0}, {"chunk_id": "p_dd56f27f39c7", "combined": 0.3716712446315214, "overlap": 0.619452074385869, "semantic": 0.0}, {"chunk_id": "p_de5175661434", "combined": 0.3710660372551254, "overlap": 0.618443395425209, "semantic": 0.0}, {"chunk_id": "p_819605397810", "combined": 0.35810248387783505, "overlap": 0.5968374731297251, "semantic": 0.0}, {"chunk_id": "p_89a8bd51d317", "combined": 0.35713510166741713, "overlap": 0.5952251694456953, "semantic": 0.0}]}
{"symbol_id": "a29f22ecde00f1ff5d5f7502bfba55de0ad1d553", "symbol_name": "translate", "query_text_overlap": "translate _m1 param number offset applymatrix4 maketranslation geometry time translates typically done one operation not during loop use link object3d", "query_text_semantic": "Translates the geometry. This is typically done as a one time\noperation, and not during a loop. Use {@link Object3D#position} for typical\nreal-time mesh rotation.\n\n@param {number} x - The x offset.\n@param {number} y - The y offset.\n@param {number} z - The z offset.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_779699e079a4", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_6b154ef2a7f7", "score": 0.5227342126999224, "overlap_score": 0.8712236878332039, "semantic_score": 0.0}, {"chunk_id": "p_e09add454892", "score": 0.4849576920576242, "overlap_score": 0.8082628200960403, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_779699e079a4", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_6b154ef2a7f7", "combined": 0.5227342126999224, "overlap": 0.8712236878332039, "semantic": 0.0}, {"chunk_id": "p_e09add454892", "combined": 0.4849576920576242, "overlap": 0.8082628200960403, "semantic": 0.0}, {"chunk_id": "p_dd56f27f39c7", "combined": 0.4631242071209885, "overlap": 0.7718736785349809, "semantic": 0.0}, {"chunk_id": "p_de5175661434", "combined": 0.4623700831730488, "overlap": 0.7706168052884147, "semantic": 0.0}, {"chunk_id": "p_819605397810", "combined": 0.4462167340344026, "overlap": 0.7436945567240043, "semantic": 0.0}, {"chunk_id": "p_89a8bd51d317", "combined": 0.4450113189648915, "overlap": 0.7416855316081525, "semantic": 0.0}, {"chunk_id": "p_1134bdea6147", "combined": 0.4199283390503918, "overlap": 0.6998805650839863, "semantic": 0.0}, {"chunk_id": "p_1ddee3c55441", "combined": 0.41255229794916964, "overlap": 0.6875871632486161, "semantic": 0.0}, {"chunk_id": "p_6764289baa70", "combined": 0.40896060155087327, "overlap": 0.6816010025847888, "semantic": 0.0}]}
{"symbol_id": "9419b827706fec47694da39823b8570db52749af", "symbol_name": "rotateZ", "query_text_overlap": "angle _m1 rotatez applymatrix4 makerotationz geometry axis time rotation rotates about typically done one operation not during loop use link", "query_text_semantic": "Rotates the geometry about the Z axis. This is typically done as a one time\noperation, and not during a loop. Use {@link Object3D#rotation} for typical\nreal-time mesh rotation.\n\n@param {number} angle - The angle in radians.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_779699e079a4", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_6b154ef2a7f7", "score": 0.5227342126999224, "overlap_score": 0.8712236878332039, "semantic_score": 0.0}, {"chunk_id": "p_e09add454892", "score": 0.4849576920576242, "overlap_score": 0.8082628200960403, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_779699e079a4", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_6b154ef2a7f7", "combined": 0.5227342126999224, "overlap": 0.8712236878332039, "semantic": 0.0}, {"chunk_id": "p_e09add454892", "combined": 0.4849576920576242, "overlap": 0.8082628200960403, "semantic": 0.0}, {"chunk_id": "p_dd56f27f39c7", "combined": 0.4631242071209885, "overlap": 0.7718736785349809, "semantic": 0.0}, {"chunk_id": "p_de5175661434", "combined": 0.4623700831730488, "overlap": 0.7706168052884147, "semantic": 0.0}, {"chunk_id": "p_efae9e409c4f", "combined": 0.4588111925227091, "overlap": 0.7646853208711818, "semantic": 0.0}, {"chunk_id": "p_71c6b67197b2", "combined": 0.4580488021531176, "overlap": 0.763414670255196, "semantic": 0.0}, {"chunk_id": "p_819605397810", "combined": 0.4462167340344026, "overlap": 0.7436945567240043, "semantic": 0.0}, {"chunk_id": "p_89a8bd51d317", "combined": 0.4450113189648915, "overlap": 0.7416855316081525, "semantic": 0.0}, {"chunk_id": "p_b5783d865d20", "combined": 0.4364853654573856, "overlap": 0.7274756090956427, "semantic": 0.0}]}
{"symbol_id": "6e6c4e662417fbebb4b54a204c30657a58ecd819", "symbol_name": "rotateY", "query_text_overlap": "angle _m1 rotatey applymatrix4 makerotationy geometry axis time rotation rotates about typically done one operation not during loop use link", "query_text_semantic": "Rotates the geometry about the Y axis. This is typically done as a one time\noperation, and not during a loop. Use {@link Object3D#rotation} for typical\nreal-time mesh rotation.\n\n@param {number} angle - The angle in radians.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_779699e079a4", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_6b154ef2a7f7", "score": 0.5227342126999224, "overlap_score": 0.8712236878332039, "semantic_score": 0.0}, {"chunk_id": "p_e09add454892", "score": 0.4849576920576242, "overlap_score": 0.8082628200960403, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_779699e079a4", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_6b154ef2a7f7", "combined": 0.5227342126999224, "overlap": 0.8712236878332039, "semantic": 0.0}, {"chunk_id": "p_e09add454892", "combined": 0.4849576920576242, "overlap": 0.8082628200960403, "semantic": 0.0}, {"chunk_id": "p_dd56f27f39c7", "combined": 0.4631242071209885, "overlap": 0.7718736785349809, "semantic": 0.0}, {"chunk_id": "p_de5175661434", "combined": 0.4623700831730488, "overlap": 0.7706168052884147, "semantic": 0.0}, {"chunk_id": "p_efae9e409c4f", "combined": 0.4588111925227091, "overlap": 0.7646853208711818, "semantic": 0.0}, {"chunk_id": "p_71c6b67197b2", "combined": 0.4580488021531176, "overlap": 0.763414670255196, "semantic": 0.0}, {"chunk_id": "p_819605397810", "combined": 0.4462167340344026, "overlap": 0.7436945567240043, "semantic": 0.0}, {"chunk_id": "p_89a8bd51d317", "combined": 0.4450113189648915, "overlap": 0.7416855316081525, "semantic": 0.0}, {"chunk_id": "p_b5783d865d20", "combined": 0.4364853654573856, "overlap": 0.7274756090956427, "semantic": 0.0}]}
{"symbol_id": "0be94293ca3b76c46b7d60da5d336cd078cf0d4c", "symbol_name": "rotateX", "query_text_overlap": "angle _m1 rotatex applymatrix4 makerotationx geometry axis time rotation rotates about typically done one operation not during loop use link", "query_text_semantic": "Rotates the geometry about the X axis. This is typically done as a one time\noperation, and not during a loop. Use {@link Object3D#rotation} for typical\nreal-time mesh rotation.\n\n@param {number} angle - The angle in radians.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_779699e079a4", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_6b154ef2a7f7", "score": 0.5227342126999224, "overlap_score": 0.8712236878332039, "semantic_score": 0.0}, {"chunk_id": "p_e09add454892", "score": 0.4849576920576242, "overlap_score": 0.8082628200960403, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_779699e079a4", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_6b154ef2a7f7", "combined": 0.5227342126999224, "overlap": 0.8712236878332039, "semantic": 0.0}, {"chunk_id": "p_e09add454892", "combined": 0.4849576920576242, "overlap": 0.8082628200960403, "semantic": 0.0}, {"chunk_id": "p_dd56f27f39c7", "combined": 0.4631242071209885, "overlap": 0.7718736785349809, "semantic": 0.0}, {"chunk_id": "p_de5175661434", "combined": 0.4623700831730488, "overlap": 0.7706168052884147, "semantic": 0.0}, {"chunk_id": "p_efae9e409c4f", "combined": 0.4588111925227091, "overlap": 0.7646853208711818, "semantic": 0.0}, {"chunk_id": "p_71c6b67197b2", "combined": 0.4580488021531176, "overlap": 0.763414670255196, "semantic": 0.0}, {"chunk_id": "p_819605397810", "combined": 0.4462167340344026, "overlap": 0.7436945567240043, "semantic": 0.0}, {"chunk_id": "p_89a8bd51d317", "combined": 0.4450113189648915, "overlap": 0.7416855316081525, "semantic": 0.0}, {"chunk_id": "p_b5783d865d20", "combined": 0.4364853654573856, "overlap": 0.7274756090956427, "semantic": 0.0}]}
{"symbol_id": "dbdde81011793a78b2526ca03336a2ff502bcdc4", "symbol_name": "applyQuaternion", "query_text_overlap": "_m1 applyquaternion quaternion applymatrix4 makerotationfromquaternion applies rotation represented geometry param apply buffergeometry reference instance", "query_text_semantic": "Applies the rotation represented by the Quaternion to the geometry.\n\n@param {Quaternion} q - The Quaternion to apply.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_32d0ee873290", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_3fa1c2469b93", "score": 0.5773357267198818, "overlap_score": 0.9622262111998029, "semantic_score": 0.0}, {"chunk_id": "p_1ef32940dd6f", "score": 0.44350623482223245, "overlap_score": 0.7391770580370541, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_32d0ee873290", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_3fa1c2469b93", "combined": 0.5773357267198818, "overlap": 0.9622262111998029, "semantic": 0.0}, {"chunk_id": "p_1ef32940dd6f", "combined": 0.44350623482223245, "overlap": 0.7391770580370541, "semantic": 0.0}, {"chunk_id": "p_2e62d911a0d8", "combined": 0.4355800074499073, "overlap": 0.7259666790831789, "semantic": 0.0}, {"chunk_id": "p_bd75b6a622ed", "combined": 0.4181431364478287, "overlap": 0.6969052274130478, "semantic": 0.0}, {"chunk_id": "p_c344c50c3a14", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_13436cbd731c", "combined": 0.3647071434975313, "overlap": 0.0, "semantic": 0.9117678587438283}, {"chunk_id": "p_67f9ec055567", "combined": 0.3387980560770869, "overlap": 0.0, "semantic": 0.8469951401927173}, {"chunk_id": "p_86702f9909a0", "combined": 0.3089965009488774, "overlap": 0.0, "semantic": 0.7724912523721934}, {"chunk_id": "p_0cc6ef0225ba", "combined": 0.3046594217267063, "overlap": 0.0, "semantic": 0.7616485543167657}]}
{"symbol_id": "df2234be0e9b192d400601270f6691aa69b7aa57", "symbol_name": "applyMatrix4", "query_text_overlap": "matrix normal position tangent applymatrix4 attributes needsupdate const normalmatrix undefined applynormalmatrix boundingbox boundingsphere computeboundingbox computeboundingsphere getnormalmatrix matrix3 transformdirection applies given", "query_text_semantic": "Applies the given 4x4 transformation matrix to the geometry.\n\n@param {Matrix4} matrix - The matrix to apply.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_12a5fb679e5a", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_3fa1c2469b93", "score": 0.4296214448581776, "overlap_score": 0.716035741430296, "semantic_score": 0.0}, {"chunk_id": "p_c344c50c3a14", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_12a5fb679e5a", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_3fa1c2469b93", "combined": 0.4296214448581776, "overlap": 0.716035741430296, "semantic": 0.0}, {"chunk_id": "p_c344c50c3a14", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_f8f9f7509cdb", "combined": 0.365497413100782, "overlap": 0.0, "semantic": 0.9137435327519549}, {"chunk_id": "p_b169d82f8843", "combined": 0.34733037253283905, "overlap": 0.0, "semantic": 0.8683259313320976}, {"chunk_id": "p_86702f9909a0", "combined": 0.3455549634876074, "overlap": 0.0, "semantic": 0.8638874087190184}, {"chunk_id": "p_bf24ebf30f09", "combined": 0.3431974756243561, "overlap": 0.5719957927072602, "semantic": 0.0}, {"chunk_id": "p_841f6201bb1f", "combined": 0.34059478949319655, "overlap": 0.567657982488661, "semantic": 0.0}, {"chunk_id": "p_c7548d500b72", "combined": 0.33014473642378983, "overlap": 0.0, "semantic": 0.8253618410594745}, {"chunk_id": "p_ab2e640961d6", "combined": 0.31218482159217964, "overlap": 0.5203080359869661, "semantic": 0.0}]}
{"symbol_id": "ce847a826dd32874d08e6285c27514d6693fd14a", "symbol_name": "setDrawRange", "query_text_overlap": "count start number drawrange setdrawrange indexed geometry param first non buffergeometry render sets draw range vertex otherwise triangle index vertices", "query_text_semantic": "Sets the draw range for this geometry.\n\n@param {number} start - The first vertex for non-indexed geometry, otherwise the first triangle index.\n@param {number} count - For non-indexed BufferGeometry, `count` is the number of vertices to render.\nFor indexed BufferGeometry, `count` is the number of indices to render.\n/", "best": {"chunk_id": "p_02690bfaf09c", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_2cefdef904af", "score": 0.42348570276815156, "overlap_score": 0.22397813727305366, "semantic_score": 0.7227470510107985}, {"chunk_id": "p_3564944ad171", "score": 0.4025027045648218, "overlap_score": 0.6708378409413697, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_02690bfaf09c", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_2cefdef904af", "combined": 0.42348570276815156, "overlap": 0.22397813727305366, "semantic": 0.7227470510107985}, {"chunk_id": "p_3564944ad171", "combined": 0.4025027045648218, "overlap": 0.6708378409413697, "semantic": 0.0}, {"chunk_id": "p_13436cbd731c", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_f8f9f7509cdb", "combined": 0.39423947226824624, "overlap": 0.6570657871137437, "semantic": 0.0}, {"chunk_id": "p_1c963b973e40", "combined": 0.3648899144704904, "overlap": 0.6081498574508174, "semantic": 0.0}, {"chunk_id": "p_7cde073befc2", "combined": 0.30597980341200076, "overlap": 0.0, "semantic": 0.7649495085300019}, {"chunk_id": "p_d309f18fcabf", "combined": 0.30481463694228716, "overlap": 0.0, "semantic": 0.7620365923557179}, {"chunk_id": "p_8c359a1dd18a", "combined": 0.30364986427619667, "overlap": 0.0, "semantic": 0.7591246606904916}, {"chunk_id": "p_173a78262c46", "combined": 0.298275183203291, "overlap": 0.0, "semantic": 0.7456879580082274}]}
{"symbol_id": "a7464c593b9758f9d65933a64e2056ca1ad9c514", "symbol_name": "clearGroups", "query_text_overlap": "cleargroups groups clears all", "query_text_semantic": "Clears all groups.\n/", "best": {"chunk_id": "p_efae9e409c4f", "score": 0.9302670544535648, "overlap_score": 1.0, "semantic_score": 0.8256676361339121}, "alternatives": [{"chunk_id": "p_7e6613303083", "score": 0.5423988552904253, "overlap_score": 0.4100582002383033, "semantic_score": 0.7409098378686082}, {"chunk_id": "p_8ae38fd042bd", "score": 0.4478758596045815, "overlap_score": 0.7464597660076359, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_efae9e409c4f", "combined": 0.9302670544535648, "overlap": 1.0, "semantic": 0.8256676361339121}, {"chunk_id": "p_7e6613303083", "combined": 0.5423988552904253, "overlap": 0.4100582002383033, "semantic": 0.7409098378686082}, {"chunk_id": "p_8ae38fd042bd", "combined": 0.4478758596045815, "overlap": 0.7464597660076359, "semantic": 0.0}, {"chunk_id": "p_066d4d3d4711", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_3e0a53e55a51", "combined": 0.3911768951181084, "overlap": 0.0, "semantic": 0.9779422377952709}, {"chunk_id": "p_0315cd69f0db", "combined": 0.3616336453899956, "overlap": 0.0, "semantic": 0.904084113474989}, {"chunk_id": "p_ca5cc0799023", "combined": 0.3614238384094819, "overlap": 0.0, "semantic": 0.9035595960237047}, {"chunk_id": "p_4354e0edb325", "combined": 0.36012082074958607, "overlap": 0.0, "semantic": 0.9003020518739651}, {"chunk_id": "p_0322ed83358b", "combined": 0.33859916514771665, "overlap": 0.0, "semantic": 0.8464979128692915}, {"chunk_id": "p_2fff3a9c3c27", "combined": 0.3009770046209121, "overlap": 0.0, "semantic": 0.7524425115522801}]}
{"symbol_id": "fa89eac5f52288a256cc0e956d4caedb4f7eba4b", "symbol_name": "addGroup", "query_text_overlap": "count materialindex start addgroup param number first groups push group geometry index adds element draw call vertex non indexed otherwise", "query_text_semantic": "Adds a group to this geometry.\n\n@param {number} start - The first element in this draw call. That is the first\nvertex for non-indexed geometry, otherwise the first triangle index.\n@param {number} count - Specifies how many vertices (or indices) are part of this group.\n@param {number} [materialIndex=0] - The material array index to use.\n/", "best": {"chunk_id": "p_02690bfaf09c", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_40aa5ed49d3a", "score": 0.5659937195378463, "overlap_score": 0.9433228658964105, "semantic_score": 0.0}, {"chunk_id": "p_8c359a1dd18a", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_02690bfaf09c", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_40aa5ed49d3a", "combined": 0.5659937195378463, "overlap": 0.9433228658964105, "semantic": 0.0}, {"chunk_id": "p_8c359a1dd18a", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_f8f9f7509cdb", "combined": 0.39423947226824624, "overlap": 0.6570657871137437, "semantic": 0.0}, {"chunk_id": "p_10c9c1f312c3", "combined": 0.3753584212234222, "overlap": 0.6255973687057037, "semantic": 0.0}, {"chunk_id": "p_14fe65927d9e", "combined": 0.3668145336464227, "overlap": 0.0, "semantic": 0.9170363341160567}, {"chunk_id": "p_efae9e409c4f", "combined": 0.3668097190552855, "overlap": 0.6113495317588091, "semantic": 0.0}, {"chunk_id": "p_1c963b973e40", "combined": 0.3648899144704904, "overlap": 0.6081498574508174, "semantic": 0.0}, {"chunk_id": "p_aeea4bf88ec9", "combined": 0.36174494367137505, "overlap": 0.6029082394522918, "semantic": 0.0}, {"chunk_id": "p_a3e86d16856e", "combined": 0.3606077008991867, "overlap": 0.0, "semantic": 0.9015192522479667}]}
{"symbol_id": "5f34c3b2b7764e73499d8a23887dc5c35d0f4fdf", "symbol_name": "hasAttribute", "query_text_overlap": "name hasattribute attribute attributes geometry has given returns param string boolean whether not undefined", "query_text_semantic": "Returns `true` if this geometry has an attribute for the given name.\n\n@param {string} name - The attribute name.\n@return {boolean} Whether this geometry has an attribute for the given name or not.\n/", "best": {"chunk_id": "p_8c359a1dd18a", "score": 0.6192611869949085, "overlap_score": 0.5953633984716319, "semantic_score": 0.6551078697798236}, "alternatives": [{"chunk_id": "p_9e3c0287bfb0", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, {"chunk_id": "p_3448f92f9868", "score": 0.5256067347799915, "overlap_score": 0.8760112246333193, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_8c359a1dd18a", "combined": 0.6192611869949085, "overlap": 0.5953633984716319, "semantic": 0.6551078697798236}, {"chunk_id": "p_9e3c0287bfb0", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_3448f92f9868", "combined": 0.5256067347799915, "overlap": 0.8760112246333193, "semantic": 0.0}, {"chunk_id": "p_c5ee26d3f549", "combined": 0.4636620953901975, "overlap": 0.7727701589836625, "semantic": 0.0}, {"chunk_id": "p_b9d639e3426c", "combined": 0.447449347942481, "overlap": 0.7457489132374683, "semantic": 0.0}, {"chunk_id": "p_ee4f1c9806fc", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_07d58ef4e5c5", "combined": 0.38161184718812396, "overlap": 0.63601974531354, "semantic": 0.0}, {"chunk_id": "p_7dc1750f2080", "combined": 0.37557203870364664, "overlap": 0.6259533978394111, "semantic": 0.0}, {"chunk_id": "p_b43208b407f5", "combined": 0.37226678632590676, "overlap": 0.0, "semantic": 0.9306669658147668}, {"chunk_id": "p_e430b9405a93", "combined": 0.35317940480638094, "overlap": 0.5886323413439682, "semantic": 0.0}]}
{"symbol_id": "99d35fa86496d5082a4e6df6bb2a36f8591448bf", "symbol_name": "deleteAttribute", "query_text_overlap": "name deleteattribute attributes attribute delete deletes given param string buffergeometry reference instance", "query_text_semantic": "Deletes the attribute for the given name.\n\n@param {string} name - The attribute name to delete.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_bf24ebf30f09", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_841f6201bb1f", "score": 0.5954498159525946, "overlap_score": 0.9924163599209911, "semantic_score": 0.0}, {"chunk_id": "p_ab2e640961d6", "score": 0.5457816745724766, "overlap_score": 0.909636124287461, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_bf24ebf30f09", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_841f6201bb1f", "combined": 0.5954498159525946, "overlap": 0.9924163599209911, "semantic": 0.0}, {"chunk_id": "p_ab2e640961d6", "combined": 0.5457816745724766, "overlap": 0.909636124287461, "semantic": 0.0}, {"chunk_id": "p_479c7c3a9ade", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_168ccbaad0ba", "combined": 0.39090204650204474, "overlap": 0.6515034108367412, "semantic": 0.0}, {"chunk_id": "p_637dfb27da97", "combined": 0.3860485821670636, "overlap": 0.0, "semantic": 0.9651214554176589}, {"chunk_id": "p_be5c0e6704db", "combined": 0.3754739427155573, "overlap": 0.0, "semantic": 0.9386848567888931}, {"chunk_id": "p_87aea40f379d", "combined": 0.352872807480921, "overlap": 0.0, "semantic": 0.8821820187023024}, {"chunk_id": "p_40d488fb7200", "combined": 0.33994629698885265, "overlap": 0.0, "semantic": 0.8498657424721315}, {"chunk_id": "p_7554a8bf000d", "combined": 0.3206598938144141, "overlap": 0.5344331563573569, "semantic": 0.0}]}
{"symbol_id": "30cebc138f1dcca842f8e3c8e2d35c7494008c76", "symbol_name": "setAttribute", "query_text_overlap": "attribute name setattribute attributes given param sets string bufferattribute interleavedbufferattribute set buffergeometry reference instance", "query_text_semantic": "Sets the given attribute for the given name.\n\n@param {string} name - The attribute name.\n@param {BufferAttribute|InterleavedBufferAttribute} attribute - The attribute to set.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_168ccbaad0ba", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_40aa5ed49d3a", "score": 0.4264092844923359, "overlap_score": 0.7106821408205598, "semantic_score": 0.0}, {"chunk_id": "p_be5c0e6704db", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_168ccbaad0ba", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_40aa5ed49d3a", "combined": 0.4264092844923359, "overlap": 0.7106821408205598, "semantic": 0.0}, {"chunk_id": "p_be5c0e6704db", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_7554a8bf000d", "combined": 0.385631779358954, "overlap": 0.6427196322649233, "semantic": 0.0}, {"chunk_id": "p_bf24ebf30f09", "combined": 0.3766234352820291, "overlap": 0.6277057254700484, "semantic": 0.0}, {"chunk_id": "p_841f6201bb1f", "combined": 0.3737672587035302, "overlap": 0.6229454311725504, "semantic": 0.0}, {"chunk_id": "p_ab2e640961d6", "combined": 0.3425902819857743, "overlap": 0.5709838033096238, "semantic": 0.0}, {"chunk_id": "p_546232f765d1", "combined": 0.33866514620892285, "overlap": 0.5644419103482048, "semantic": 0.0}, {"chunk_id": "p_e115e89e2b35", "combined": 0.3328059257383221, "overlap": 0.0, "semantic": 0.8320148143458052}, {"chunk_id": "p_8c359a1dd18a", "combined": 0.3124319401879726, "overlap": 0.0, "semantic": 0.7810798504699314}]}
{"symbol_id": "93e830abf4dcbb46ad96a11c06bb78c604f1266b", "symbol_name": "getAttribute", "query_text_overlap": "name attribute getattribute attributes returns buffer undefined given param string bufferattribute interleavedbufferattribute not has been found", "query_text_semantic": "Returns the buffer attribute for the given name.\n\n@param {string} name - The attribute name.\n@return {BufferAttribute|InterleavedBufferAttribute|undefined} The buffer attribute.\nReturns `undefined` if not attribute has been found.\n/", "best": {"chunk_id": "p_9e3c0287bfb0", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_8c359a1dd18a", "score": 0.5454919364593781, "overlap_score": 0.4019458172036194, "semantic_score": 0.7608111153430162}, {"chunk_id": "p_9d1501d1c7bf", "score": 0.48174759109840537, "overlap_score": 0.8029126518306756, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_9e3c0287bfb0", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_8c359a1dd18a", "combined": 0.5454919364593781, "overlap": 0.4019458172036194, "semantic": 0.7608111153430162}, {"chunk_id": "p_9d1501d1c7bf", "combined": 0.48174759109840537, "overlap": 0.8029126518306756, "semantic": 0.0}, {"chunk_id": "p_e44bd829710f", "combined": 0.4019777295415664, "overlap": 0.6699628825692774, "semantic": 0.0}, {"chunk_id": "p_be5c0e6704db", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_306b3028214e", "combined": 0.3826419323316265, "overlap": 0.6377365538860442, "semantic": 0.0}, {"chunk_id": "p_71c6b67197b2", "combined": 0.364533134887252, "overlap": 0.6075552248120867, "semantic": 0.0}, {"chunk_id": "p_ee4f1c9806fc", "combined": 0.3401352827222274, "overlap": 0.0, "semantic": 0.8503382068055684}, {"chunk_id": "p_a3ba3397e685", "combined": 0.3318830484035383, "overlap": 0.0, "semantic": 0.8297076210088458}, {"chunk_id": "p_87aea40f379d", "combined": 0.3308455111453315, "overlap": 0.0, "semantic": 0.8271137778633287}]}
{"symbol_id": "617e9c1e36f1916e6f7c603971bf066d92a367db", "symbol_name": "getIndirect", "query_text_overlap": "indirect getindirect attribute returns geometry bufferattribute defined", "query_text_semantic": "Returns the indirect attribute of this geometry.\n\n@return {?BufferAttribute} The indirect attribute. Returns `null` if no indirect attribute is defined.\n/", "best": {"chunk_id": "p_10c9c1f312c3", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_a3ba3397e685", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, {"chunk_id": "p_8c359a1dd18a", "score": 0.37050934570565935, "overlap_score": 0.0, "semantic_score": 0.9262733642641483}], "topk_raw": [{"chunk_id": "p_10c9c1f312c3", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_a3ba3397e685", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_8c359a1dd18a", "combined": 0.37050934570565935, "overlap": 0.0, "semantic": 0.9262733642641483}, {"chunk_id": "p_ee4f1c9806fc", "combined": 0.34402305252963855, "overlap": 0.0, "semantic": 0.8600576313240963}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.3391562596922532, "overlap": 0.0, "semantic": 0.847890649230633}, {"chunk_id": "p_4b5cd35ef3c3", "combined": 0.338355592548754, "overlap": 0.0, "semantic": 0.8458889813718851}, {"chunk_id": "p_c7548d500b72", "combined": 0.33407242368042944, "overlap": 0.0, "semantic": 0.8351810592010736}, {"chunk_id": "p_0315cd69f0db", "combined": 0.31953170197547903, "overlap": 0.0, "semantic": 0.7988292549386975}, {"chunk_id": "p_a3e86d16856e", "combined": 0.301008627292119, "overlap": 0.0, "semantic": 0.7525215682302975}, {"chunk_id": "p_405b1492c084", "combined": 0.28889250381360493, "overlap": 0.0, "semantic": 0.7222312595340122}]}
{"symbol_id": "0a2b73150270dd59dba350da92e52f5b03de880b", "symbol_name": "setIndirect", "query_text_overlap": "indirect setindirect attribute sets given geometry param bufferattribute holding draw calls buffergeometry reference instance", "query_text_semantic": "Sets the given indirect attribute to this geometry.\n\n@param {BufferAttribute} indirect - The attribute holding indirect draw calls.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_ab2e640961d6", "score": 0.9159361361600278, "overlap_score": 0.909636124287461, "semantic_score": 0.9253861539688777}, "alternatives": [{"chunk_id": "p_bf24ebf30f09", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, {"chunk_id": "p_841f6201bb1f", "score": 0.5954498159525946, "overlap_score": 0.9924163599209911, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_ab2e640961d6", "combined": 0.9159361361600278, "overlap": 0.909636124287461, "semantic": 0.9253861539688777}, {"chunk_id": "p_bf24ebf30f09", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_841f6201bb1f", "combined": 0.5954498159525946, "overlap": 0.9924163599209911, "semantic": 0.0}, {"chunk_id": "p_a845eb7471db", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_168ccbaad0ba", "combined": 0.39090204650204474, "overlap": 0.6515034108367412, "semantic": 0.0}, {"chunk_id": "p_b06142b4f967", "combined": 0.39047589251652703, "overlap": 0.0, "semantic": 0.9761897312913175}, {"chunk_id": "p_7557473886f3", "combined": 0.3610102713949995, "overlap": 0.0, "semantic": 0.9025256784874988}, {"chunk_id": "p_4b5cd35ef3c3", "combined": 0.3558595862121834, "overlap": 0.0, "semantic": 0.8896489655304584}, {"chunk_id": "p_8c359a1dd18a", "combined": 0.35479786857128726, "overlap": 0.0, "semantic": 0.8869946714282181}, {"chunk_id": "p_86702f9909a0", "combined": 0.34539389187213854, "overlap": 0.0, "semantic": 0.8634847296803463}]}
{"symbol_id": "25477d8b806730b9eca05837b788dae621a26545", "symbol_name": "setIndex", "query_text_overlap": "index array setindex arrayneedsuint32 isarray uint16bufferattribute uint32bufferattribute sets given geometry param number bufferattribute set buffergeometry reference instance new else", "query_text_semantic": "Sets the given index to this geometry.\n\n@param {Array<number>|BufferAttribute} index - The index to set.\n@return {BufferGeometry} A reference to this instance.\n/", "best": {"chunk_id": "p_306b3028214e", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_168ccbaad0ba", "score": 0.4082685390634762, "overlap_score": 0.6804475651057937, "semantic_score": 0.0}, {"chunk_id": "p_4b5cd35ef3c3", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}], "topk_raw": [{"chunk_id": "p_306b3028214e", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_168ccbaad0ba", "combined": 0.4082685390634762, "overlap": 0.6804475651057937, "semantic": 0.0}, {"chunk_id": "p_4b5cd35ef3c3", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_c7548d500b72", "combined": 0.3841274799767178, "overlap": 0.0, "semantic": 0.9603186999417944}, {"chunk_id": "p_e115e89e2b35", "combined": 0.38129079471960714, "overlap": 0.0, "semantic": 0.9532269867990179}, {"chunk_id": "p_7cde073befc2", "combined": 0.3745148635205467, "overlap": 0.0, "semantic": 0.9362871588013667}, {"chunk_id": "p_8493448f361a", "combined": 0.3718551052512185, "overlap": 0.6197585087520309, "semantic": 0.0}, {"chunk_id": "p_2cefdef904af", "combined": 0.36864376904482654, "overlap": 0.0, "semantic": 0.9216094226120664}, {"chunk_id": "p_d553c50ad036", "combined": 0.35729316670124645, "overlap": 0.5954886111687441, "semantic": 0.0}, {"chunk_id": "p_3f0c53dcc88b", "combined": 0.3433366458872953, "overlap": 0.0, "semantic": 0.8583416147182382}]}
{"symbol_id": "411da60f9bc7c700d922a335b65c24b74ad643a8", "symbol_name": "getIndex", "query_text_overlap": "index getindex returns geometry bufferattribute defined", "query_text_semantic": "Returns the index of this geometry.\n\n@return {?BufferAttribute} The index. Returns `null` if no index is defined.\n/", "best": {"chunk_id": "p_10c9c1f312c3", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_c7548d500b72", "score": 0.4, "overlap_score": 0.0, "semantic_score": 1.0}, {"chunk_id": "p_a3ba3397e685", "score": 0.34978227752114255, "overlap_score": 0.0, "semantic_score": 0.8744556938028563}], "topk_raw": [{"chunk_id": "p_10c9c1f312c3", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_c7548d500b72", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_a3ba3397e685", "combined": 0.34978227752114255, "overlap": 0.0, "semantic": 0.8744556938028563}, {"chunk_id": "p_405b1492c084", "combined": 0.3260795482614234, "overlap": 0.0, "semantic": 0.8151988706535584}, {"chunk_id": "p_8c359a1dd18a", "combined": 0.28623225860734774, "overlap": 0.0, "semantic": 0.7155806465183693}, {"chunk_id": "p_4b5cd35ef3c3", "combined": 0.2852442550330158, "overlap": 0.0, "semantic": 0.7131106375825395}, {"chunk_id": "p_3e0a53e55a51", "combined": 0.25908913887333834, "overlap": 0.0, "semantic": 0.6477228471833458}, {"chunk_id": "p_1dc4c599846f", "combined": 0.23644558212331304, "overlap": 0.0, "semantic": 0.5911139553082826}, {"chunk_id": "p_87aea40f379d", "combined": 0.21413945375703727, "overlap": 0.0, "semantic": 0.5353486343925932}, {"chunk_id": "p_55f82ed410bc", "combined": 0.2106355052514365, "overlap": 0.0, "semantic": 0.5265887631285913}]}
{"symbol_id": "8ba710523a72e9c250710eccc1f012e752c0a0da", "symbol_name": "constructor", "query_text_overlap": "type name geometry each constructor index uuid used readonly default attribute _id defineproperty generateuuid indirect isbuffergeometry object value can buffergeometry", "query_text_semantic": "Constructs a new geometry.\n/", "best": {"chunk_id": "p_dd56f27f39c7", "score": 0.6, "overlap_score": 1.0, "semantic_score": 0.0}, "alternatives": [{"chunk_id": "p_7dc1750f2080", "score": 0.4630865383414436, "overlap_score": 0.7718108972357394, "semantic_score": 0.0}, {"chunk_id": "p_14fe65927d9e", "score": 0.4213123645852016, "overlap_score": 0.7021872743086693, "semantic_score": 0.0}], "topk_raw": [{"chunk_id": "p_dd56f27f39c7", "combined": 0.6, "overlap": 1.0, "semantic": 0.0}, {"chunk_id": "p_7dc1750f2080", "combined": 0.4630865383414436, "overlap": 0.7718108972357394, "semantic": 0.0}, {"chunk_id": "p_14fe65927d9e", "combined": 0.4213123645852016, "overlap": 0.7021872743086693, "semantic": 0.0}, {"chunk_id": "p_c344c50c3a14", "combined": 0.4, "overlap": 0.0, "semantic": 1.0}, {"chunk_id": "p_ed80d03c45ad", "combined": 0.3896263742235552, "overlap": 0.6493772903725921, "semantic": 0.0}, {"chunk_id": "p_c29e03ef0aad", "combined": 0.3642446723687507, "overlap": 0.6070744539479178, "semantic": 0.0}, {"chunk_id": "p_97858363d151", "combined": 0.31216139891975403, "overlap": 0.52026899819959, "semantic": 0.0}, {"chunk_id": "p_72fe132cfcb0", "combined": 0.31205108087659267, "overlap": 0.0, "semantic": 0.7801277021914816}, {"chunk_id": "p_0322ed83358b", "combined": 0.31140606236324797, "overlap": 0.0, "semantic": 0.7785151559081199}, {"chunk_id": "p_2f967b2fedff", "combined": 0.30816010768641927, "overlap": 0.0, "semantic": 0.7704002692160481}]}
