```python
"""main.py

This module serves as the entry point for the GAN experiment reproduction.
It loads configuration parameters from config.yaml, sets random seeds for reproducibility,
loads the MNIST dataset using DatasetLoader, builds the GAN model using GANModel, and then
triggers the training (via Trainer) and evaluation (via Evaluation). All configuration values
are read from config.yaml, and the workflow strictly follows the experimental design.
"""

import os
import logging
import random
from typing import Dict, Any

import yaml
import numpy as np
import torch

from dataset_loader import DatasetLoader
from model import GANModel
from trainer import Trainer
from evaluation import Evaluation


class Main:
    """Main class to orchestrate the GAN experiment.

    It coordinates the following steps:
      1. Loading and parsing configuration.
      2. Dataset loading via DatasetLoader.
      3. Building the GAN model via GANModel.
      4. Training the GAN via Trainer.
      5. Evaluating the GAN via Evaluation.
    """

    def __init__(self, config: Dict[str, Any]) -> None:
        """
        Initializes the Main class with configuration parameters and sets random seeds for reproducibility.

        Args:
            config (Dict[str, Any]): Configuration dictionary loaded from config.yaml.
        """
        self.config: Dict[str, Any] = config

        # Set a fixed random seed for reproducibility
        seed: int = 42
        random.seed(seed)
        np.random.seed(seed)
        torch.manual_seed(seed)
        if torch.cuda.is_available():
            torch.cuda.manual_seed_all(seed)

        # Set up logging configuration for the experiment
        logging.basicConfig(
            level=logging.INFO,
            format="%(asctime)s [%(levelname)s] %(message)s",
            datefmt="%Y-%m-%d %H:%M:%S"
        )
        self.logger: logging.Logger = logging.getLogger("Main")
        self.logger.info("Random seed set to %d", seed)
        self.logger.info("Configuration successfully loaded.")

    def run_experiment(self) -> None:
        """Orchestrates the overall workflow of the GAN experiment."""
        # Step 1: Data Loading via DatasetLoader
        self.logger.info("Loading dataset using DatasetLoader.")
        dataset_loader: DatasetLoader = DatasetLoader(self.config)
        train_loader, test_loader = dataset_loader.load_data()
        self.logger.info("Dataset loaded successfully with training and test splits.")

        # Step 2: Building the GAN Model
        self.logger.info("Building GAN model using GANModel.")
        gan_model: GANModel = GANModel(self.config)

        # Step 3: Training setup via Trainer
        self.logger.info("Starting training using Trainer.")
        trainer: Trainer = Trainer(gan_model, (train_loader, test_loader), self.config)
        trainer.train()
        self.logger.info("Training completed.")

        # Step 4: Evaluation Phase via Evaluation
        self.logger.info("Starting evaluation using Evaluation module.")
        evaluator: Evaluation = Evaluation(gan_model, (train_loader, test_loader), self.config)
        evaluation_results: Dict[str, Any] = evaluator.evaluate()
        self.logger.info("Evaluation completed with results: %s", evaluation_results)

        # Output final evaluation results
        print("Final Evaluation Results:")
        print(evaluation_results)


def load_config(config_path: str = "config.yaml") -> Dict[str, Any]:
    """
    Loads and parses the configuration file (config.yaml).

    Args:
        config_path (str, optional): Path to the configuration file. Defaults to "config.yaml".

    Returns:
        Dict[str, Any]: Parsed configuration dictionary.
    """
    if not os.path.exists(config_path):
        raise FileNotFoundError(f"Configuration file '{config_path}' not found.")
    with open(config_path, "r") as yaml_file:
        config: Dict[str, Any] = yaml.safe_load(yaml_file)
    return config


def main() -> None:
    """
    Main function to load configuration, instantiate the Main class, and run the experiment.
    """
    config: Dict[str, Any] = load_config("config.yaml")
    experiment: Main = Main(config)
    experiment.run_experiment()


if __name__ == "__main__":
    main()
```